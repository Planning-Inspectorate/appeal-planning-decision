paths:
  /api/v2/users/:
    post:
      tags:
        - users
      description: Create a new user
      requestBody:
        description: user to create, `id` is not allowed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppealUser'
      responses:
        200:
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUser'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /api/v2/users/{email}:
    get:
      tags:
        - users
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          example: 'me@example.com'
          description: user email
      responses:
        200:
          description: The appeal user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUser'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /api/v2/users/{email}/appeal/{appealId}:
    put:
      tags:
        - users
      description: Link a user to an appeal
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          example: me@example.com
          description: user email
        - in: path
          name: appealId
          required: true
          schema:
            type: string
            format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: Unique identifier of appeal (SQL)
      requestBody:
        description: role
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: ['appellant', 'agent', 'interestedParty']
      responses:
        200:
          description: Created role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealToUser'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        500:
          description: Something went wrong
  /api/v2/users/appeal/{appealId}:
    get:
      tags:
        - users
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          example: 'me@example.com'
          description: user email
      responses:
        200:
          description: The appeal user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUser'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
