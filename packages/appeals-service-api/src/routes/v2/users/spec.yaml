paths:
  /api/v2/users/:
    post:
      tags:
        - users
      description: Create a new user
      requestBody:
        description: user to create, `id` is not allowed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppealUser'
      responses:
        200:
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUser'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
    get:
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/lpaCode'
      description: Search users
      responses:
        200:
          description: Array of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUsers'

  /api/v2/users/{userLookup}:
    get:
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/userLookup'
      responses:
        200:
          description: The appeal user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUser'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
    patch:
      tags:
        - users
      description: Update an appeal user
      parameters:
        - $ref: '#/components/parameters/userLookup'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppealUserUpdate'
      responses:
        200:
          description: Returns the updated AppealUser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealUser'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
    delete:
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/userLookup'
      responses:
        200:
          description: The appeal user was removed
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /api/v2/users/{userLookup}/isRule6User:
    get:
      tags:
        - users
      description: Confirm if a user has any appeals when has rule 6 party role
      parameters:
        - in: path
          name: userLookup
          required: true
          schema:
            type: string
            format: email
          example: me@example.com
          description: user email
      responses:
        200:
          description: Created role
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        500:
          description: Something went wrong
  /api/v2/users/{email}/appeal/{appealId}:
    put:
      tags:
        - users
      description: Link a user to an appeal
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          example: me@example.com
          description: user email
        - in: path
          name: appealId
          required: true
          schema:
            type: string
            format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: Unique identifier of appeal (SQL)
      requestBody:
        description: role
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: ['Appellant', 'Agent', 'InterestedParty']
      responses:
        200:
          description: Created role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppealToUser'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        500:
          description: Something went wrong

components:
  schemas:
    AppealUsers:
      type: array
      items:
        $ref: '#/components/schemas/AppealUser'
    AppealUserUpdate:
      type: object
      properties:
        isEnrolled:
          type: boolean
          example: 'false'
        lpaStatus:
          type: string
          enum: ['added', 'confirmed', 'removed']

  parameters:
    userLookup:
      name: userLookup
      in: path
      required: true
      schema:
        type: string
      example: 'me@example.com or e46ff3f1-2771-4d79-8573-11029ac94c00'
      description: user email or user id
    lpaCode:
      name: lpaCode
      in: query
      schema:
        type: string
      description: local planning authority code
