openapi: 0.0.1
info:
  title: Appeal Reply Service API Documentation
  description:
    API to <ul><li>create, retrieve and modify appeal replies</li><li>
  version: 1.0.3
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:3002/'
paths:
  '/api/v1/reply':
    post:
      summary: Creates a new reply
      description: A newly created reply will have a DRAFT state and all subsections will have NOT STARTED state. The id will be a uuid and the returned representation of the new reply will be valid so it can be submitted as a PUT payload 'as is'.
      tags:
        - Reply
      responses:
        '201':
          description: Returns a newly created reply
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
  '/api/v1/reply/{id}':
    get:
      summary: Returns an existing reply
      description: The reply includes the state of all subsections.
      tags:
        - Reply
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier
      responses:
        '200':
          description: Returns an reply
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
        '404':
          description: The reply could not be found
    put:
      summary: Modifies an existing reply
      description: The provided reply will replace the existing one if the proposed update complies with all format and business validation rules. Nothing is changed if there are any validation failures and the errors will be listed in the response. The id and sections state fields are required to be passed explicitly in all requests while any omitted fields will have default values substituted so that each field matches their values in a newly created reply.
      tags:
        - Reply
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier
      requestBody:
        description: Proposed new state for the reply.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
        required: true
      responses:
        '200':
          description: Returns the updated reply
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
        '400':
          description: Returns a collection of errors generated by the invalid input
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: number
                    example: 400
                  errors:
                    type: array
                    items:
                      type: string
                      example: 'requiredDocumentsSection.originalApplication.uploadedFile.id must be a valid UUID'
        '404':
          description: The reply could not be found
components:
  schemas:

