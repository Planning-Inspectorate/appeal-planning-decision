const { use } = require('../../router-mock');
const taskListRouter = require('../../../../../src/routes/full-appeal/submit-appeal/task-list');
const checkAnswersRouter = require('../../../../../src/routes/full-appeal/submit-appeal/check-your-answers');
const contactDetailsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/contact-details');
const applicationFormRouter = require('../../../../../src/routes/full-appeal/submit-appeal/application-form');
const applicationNumberRouter = require('../../../../../src/routes/full-appeal/submit-appeal/application-number');
const designAccessStatementRouter = require('../../../../../src/routes/full-appeal/submit-appeal/design-access-statement');
const designAccessStatementSubmittedRouter = require('../../../../../src/routes/full-appeal/submit-appeal/design-access-statement-submitted');
const applicationSiteAddressRouter = require('../../../../../src/routes/full-appeal/submit-appeal/appeal-site-address');
const applicantNameRouter = require('../../../../../src/routes/full-appeal/submit-appeal/applicant-name');
const proposedDevelopmentChanged = require('../../../../../src/routes/full-appeal/submit-appeal/proposed-development-changed');
const decisionLetterRouter = require('../../../../../src/routes/full-appeal/submit-appeal/decision-letter');
const appealStatementRouter = require('../../../../../src/routes/full-appeal/submit-appeal/appeal-statement');
const originalApplicantRouter = require('../../../../../src/routes/full-appeal/submit-appeal/original-applicant');
const ownSomeOfTheLandRouter = require('../../../../../src/routes/full-appeal/submit-appeal/own-some-of-the-land');
const ownAllTheLandRouter = require('../../../../../src/routes/full-appeal/submit-appeal/own-all-the-land');
const knowTheOwnersRouter = require('../../../../../src/routes/full-appeal/submit-appeal/know-the-owners');
const agriculturalHoldingRouter = require('../../../../../src/routes/full-appeal/submit-appeal/agricultural-holding');
const areYouATenantRouter = require('../../../../../src/routes/full-appeal/submit-appeal/are-you-a-tenant');
const otherTenantsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/other-tenants');
const declarationRouter = require('../../../../../src/routes/full-appeal/submit-appeal/declaration');
const declarationInformationRouter = require('../../../../../src/routes/full-appeal/submit-appeal/declaration-information');
const appealSubmittedRouter = require('../../../../../src/routes/full-appeal/submit-appeal/appeal-submitted');
const visibleFromRoadRouter = require('../../../../../src/routes/full-appeal/submit-appeal/visible-from-road');
const healthSafetyIssuesRouter = require('../../../../../src/routes/full-appeal/submit-appeal/health-safety-issues');
const identfyingTheOwnersRouter = require('../../../../../src/routes/full-appeal/submit-appeal/identifying-the-owners');
const plansDrawingsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/plans-drawings');
const supportingDocumentsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/supporting-documents');
const newPlansDrawingsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/new-plans-drawings');
const newSupportingDocumentsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/new-supporting-documents');
const tellingTheLandownersRouter = require('../../../../../src/routes/full-appeal/submit-appeal/telling-the-landowners');
const tellingTheTenantsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/telling-the-tenants');
const howDecideAppealRouter = require('../../../../../src/routes/full-appeal/submit-appeal/how-decide-appeal');
const whyHearingRouter = require('../../../../../src/routes/full-appeal/submit-appeal/why-hearing');
const whyInquiryRouter = require('../../../../../src/routes/full-appeal/submit-appeal/why-inquiry');
const expectEnquiryLastRouter = require('../../../../../src/routes/full-appeal/submit-appeal/expect-inquiry-last');
const draftStatementOfCommonGroundRouter = require('../../../../../src/routes/full-appeal/submit-appeal/draft-statement-common-ground');
const advertisingYourAppealRouter = require('../../../../../src/routes/full-appeal/submit-appeal/advertising-your-appeal');
const plansDrawingsDocumentsRouter = require('../../../../../src/routes/full-appeal/submit-appeal/plans-drawings-documents');
const originalDecisionNoticeRouter = require('../../../../../src/routes/full-appeal/submit-appeal/original-decision-notice');
const letterConfirmingApplicationRouter = require('../../../../../src/routes/full-appeal/submit-appeal/letter-confirming-application');
const planningObligationPlannedRouter = require('../../../../../src/routes/full-appeal/submit-appeal/planning-obligation-planned');
const planningObligationStatusRouter = require('../../../../../src/routes/full-appeal/submit-appeal/planning-obligation-status');
const applicationCertificatesIncludedRouter = require('../../../../../src/routes/full-appeal/submit-appeal/application-certificates-included');
const certificatesRouter = require('../../../../../src/routes/full-appeal/submit-appeal/certificates');

describe('routes/full-appeal/submit-appeal/index', () => {
  beforeEach(() => {
    // eslint-disable-next-line global-require
    require('../../../../../src/routes/full-appeal/submit-appeal');
  });

  it('should define the expected routes', () => {
    expect(use.mock.calls.length).toBe(44);
    expect(use).toHaveBeenCalledWith(taskListRouter);
    expect(use).toHaveBeenCalledWith(checkAnswersRouter);
    expect(use).toHaveBeenCalledWith(contactDetailsRouter);
    expect(use).toHaveBeenCalledWith(applicationFormRouter);
    expect(use).toHaveBeenCalledWith(applicationNumberRouter);
    expect(use).toHaveBeenCalledWith(designAccessStatementRouter);
    expect(use).toHaveBeenCalledWith(designAccessStatementSubmittedRouter);
    expect(use).toHaveBeenCalledWith(applicationSiteAddressRouter);
    expect(use).toHaveBeenCalledWith(applicantNameRouter);
    expect(use).toHaveBeenCalledWith(proposedDevelopmentChanged);
    expect(use).toHaveBeenCalledWith(decisionLetterRouter);
    expect(use).toHaveBeenCalledWith(appealStatementRouter);
    expect(use).toHaveBeenCalledWith(originalApplicantRouter);
    expect(use).toHaveBeenCalledWith(ownSomeOfTheLandRouter);
    expect(use).toHaveBeenCalledWith(ownAllTheLandRouter);
    expect(use).toHaveBeenCalledWith(knowTheOwnersRouter);
    expect(use).toHaveBeenCalledWith(agriculturalHoldingRouter);
    expect(use).toHaveBeenCalledWith(areYouATenantRouter);
    expect(use).toHaveBeenCalledWith(otherTenantsRouter);
    expect(use).toHaveBeenCalledWith(declarationRouter);
    expect(use).toHaveBeenCalledWith(declarationInformationRouter);
    expect(use).toHaveBeenCalledWith(appealSubmittedRouter);
    expect(use).toHaveBeenCalledWith(visibleFromRoadRouter);
    expect(use).toHaveBeenCalledWith(healthSafetyIssuesRouter);
    expect(use).toHaveBeenCalledWith(identfyingTheOwnersRouter);
    expect(use).toHaveBeenCalledWith(plansDrawingsRouter);
    expect(use).toHaveBeenCalledWith(supportingDocumentsRouter);
    expect(use).toHaveBeenCalledWith(newPlansDrawingsRouter);
    expect(use).toHaveBeenCalledWith(newSupportingDocumentsRouter);
    expect(use).toHaveBeenCalledWith(tellingTheLandownersRouter);
    expect(use).toHaveBeenCalledWith(tellingTheTenantsRouter);
    expect(use).toHaveBeenCalledWith(howDecideAppealRouter);
    expect(use).toHaveBeenCalledWith(whyHearingRouter);
    expect(use).toHaveBeenCalledWith(whyInquiryRouter);
    expect(use).toHaveBeenCalledWith(expectEnquiryLastRouter);
    expect(use).toHaveBeenCalledWith(draftStatementOfCommonGroundRouter);
    expect(use).toHaveBeenCalledWith(advertisingYourAppealRouter);
    expect(use).toHaveBeenCalledWith(plansDrawingsDocumentsRouter);
    expect(use).toHaveBeenCalledWith(originalDecisionNoticeRouter);
    expect(use).toHaveBeenCalledWith(planningObligationPlannedRouter);
    expect(use).toHaveBeenCalledWith(planningObligationStatusRouter);
    expect(use).toHaveBeenCalledWith(applicationCertificatesIncludedRouter);
    expect(use).toHaveBeenCalledWith(certificatesRouter);
    expect(use).toHaveBeenCalledWith(letterConfirmingApplicationRouter);
  });
});
