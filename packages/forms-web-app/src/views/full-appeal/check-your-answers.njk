{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "../macros/bool-to-sentence-case.njk" import boolToSentenceCaseField %}
{% from "../macros/contact-details.njk" import contactDetails %}
{% from "../macros/address.njk" import address %}
{% from "../macros/uploaded-file-link.njk" import uploadedFileLink %}
{% from "../macros/uploaded-file-list.njk" import uploadedFileList %}
{% from "../macros/summary-field.njk" import summaryField %}
{% from "../macros/proposed-dev-changed-bool.njk" import boolToSentenceProposedDevelopmentChanged %}
{% from "../macros/format-planning-obligation-status.njk" import formatPlanningObligationStatus %}

{% macro checkYourAnswers(appeal, isPdf) %}
  {% set headingClass = "govuk-heading-l" if isPdf !== true else "govuk-heading-m" %}
  <h2 class="{{ headingClass }}" data-cy="contact-details-heading">Your contact details</h2>
    {% set otherText = "" %}
    {% if appeal.appealSiteSection.siteOwnership.ownsSomeOfTheLand %}
      {% set otherText = " other" %}
    {% endif %}
    {% set isOriginalApplicantValue = "Yes, the planning application was made in my name" %}
    {% if not appeal.contactDetailsSection.isOriginalApplicant %}
      {% set isOriginalApplicantValue = "No, I'm acting on behalf of the appellant" %}
    {% endif %}
    {% set isOriginalApplicantRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/original-applicant",
          text: "Change",
          visuallyHiddenText: "if the planning application was made in your name",
          attributes: {
            "data-cy": "change-is-original-applicant"
          }
        }
      ]
    } %}
    {% set isOriginalApplicantRow = {
      key: { text: summaryField(
        "Was the planning application made in your name?",
        { "data-cy": "is-original-applicant-label" }
      ) },
      value: { text: summaryField(isOriginalApplicantValue, { "data-cy": "is-original-applicant" }) },
      actions: isOriginalApplicantRowActions if isPdf !== true
    } %}
    {% set appealingOnBehalfOf = appeal.contactDetailsSection.appealingOnBehalfOf %}
    {% set appealingOnBehalfOfRowHtml %}
      <p class="govuk-body" data-cy="appealing-on-behalf-of-name">{{ appealingOnBehalfOf.name }}</p>
      {% if appealingOnBehalfOf.companyName %}
        <p class="govuk-body" data-cy="appealing-on-behalf-of-company">{{ appealingOnBehalfOf.companyName }}</p>
      {% endif %}
    {% endset %}
    {% set appealingOnBehalfOfRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/applicant-name",
          text: "Change",
          visuallyHiddenText: "the applicant's name",
          attributes: {
            "data-cy": "change-appealing-on-behalf-of"
          }
        }
      ]
    } %}
    {% set appealingOnBehalfOfRow = {
      key: { text: summaryField(
        "Appeal made on behalf of",
        { "data-cy": "appealing-on-behalf-of-label" }
      ) },
      value: { html: appealingOnBehalfOfRowHtml },
      actions: appealingOnBehalfOfRowActions if isPdf !== true
    } %}
    {% set contactDetailsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/contact-details",
          text: "Change",
          visuallyHiddenText: "your contact details",
          attributes: {
            "data-cy": "change-contact-details"
          }
        }
      ]
    } %}
    {% if isPdf === true %}
      {% set contactDetailsRow = {
        key: { text: summaryField(
          "Your contact details",
          { "data-cy": "contact-details-label" }
        ) },
        value: { text: contactDetails(appeal.contactDetailsSection.contact, appeal.email) }
      } %}
    {% else %}
      {% set contactDetailsRow = {
        key: { text: summaryField(
          "Your contact details",
          { "data-cy": "contact-details-label" }
        ) },
        value: { text: contactDetails(appeal.contactDetailsSection.contact) },
        actions: contactDetailsRowActions
      } %}
    {% endif %}
    {% set contactDetailsRows = [isOriginalApplicantRow] %}
    {% if not appeal.contactDetailsSection.isOriginalApplicant %}
      {% set contactDetailsRows = (contactDetailsRows.push(appealingOnBehalfOfRow), contactDetailsRows) %}
    {% endif %}
    {% set contactDetailsRows = (contactDetailsRows.push(contactDetailsRow), contactDetailsRows) %}
    {{ govukSummaryList({
      classes: "govuk-summary-list govuk-!-margin-bottom-9",
      rows: contactDetailsRows
    }) }}

    <h2 class="{{ headingClass }}" data-cy="appeal-site-heading">The appeal site</h2>
    {% set siteAddressRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/appeal-site-address",
          text: "Change",
          visuallyHiddenText: "the appeal site address",
          attributes: {
            "data-cy": "change-site-address"
          }
        }
      ]
    } %}
    {% set siteAddressRow = {
      key: { text: summaryField(
        "Appeal site address",
        { "data-cy": "site-address-label" }
      ) },
      value: { text: summaryField(
        address(appeal.appealSiteSection.siteAddress),
        { "data-cy": "site-address" }
      ) },
      actions: siteAddressRowActions if isPdf !== true
    } %}
    {% if appeal.appealSiteSection.siteOwnership.ownsAllTheLand %}
      {% set ownsAllTheLandValue = "You own all the land involved in the appeal" %}
    {% else %}
      {% if not appeal.appealSiteSection.siteOwnership.ownsAllTheLand %}
        {% set ownsAllTheLandValue = "You own some of the land involved in the appeal" %}
      {% endif %}
      {% if not appeal.appealSiteSection.siteOwnership.ownsSomeOfTheLand %}
        {% set ownsAllTheLandValue = "You own none of the land involved in the appeal" %}
      {% endif %}
    {% endif %}
    {% set ownsAllTheLandRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/own-all-the-land",
          text: "Change",
          visuallyHiddenText: "if you own all the land involved in the appeal",
          attributes: {
            "data-cy": "change-owns-all-the-land"
          }
        }
      ]
    } %}
    {% set ownsAllTheLandRow = {
      key: { text: summaryField(
        "Do you own the land involved in the appeal?",
        { "data-cy": "owns-all-the-land-label" }
      ) },
      value: { text: summaryField(ownsAllTheLandValue, { "data-cy": "owns-all-the-land" }) },
      actions: ownsAllTheLandRowActions if isPdf !== true
    } %}
    {% set tellingOtherLandownersRowHtml %}
      <ul class="govuk-list">
        <li>{{ summaryField(
          "I've told all the" + otherText + " landowners about my appeal",
          { "data-cy": "telling-other-landowners-1" }
        ) }}</li>
        <li>{{ summaryField(
          "I've done this within the last 21 days",
          { "data-cy": "telling-other-landowners-2" }
        ) }}</li>
        <li>{{ summaryField(
          "I used a copy of the form in annexe 2A or 2B",
          { "data-cy": "telling-other-landowners-3" }
        ) }}</li>
      </ul>
    {% endset %}
    {% set tellingOtherLandownersRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/telling-the-landowners",
          text: "Change",
          visuallyHiddenText: "if you've told the other landowners",
          attributes: {
            "data-cy": "change-telling-other-landowners"
          }
        }
      ]
    } %}
    {% set tellingOtherLandownersRow = {
      key: { text: summaryField(
        "Telling the" + otherText + " landowners",
        { "data-cy": "telling-other-landowners-label" }
      ) },
      value: { html: tellingOtherLandownersRowHtml },
      actions: tellingOtherLandownersRowActions if isPdf !== true
    } %}
    {% set knowTheOwnersRowTitle = "Do you know who owns the rest of the land involved in the appeal?" %}
    {% if not appeal.appealSiteSection.siteOwnership.ownsSomeOfTheLand %}
      {% set knowTheOwnersRowTitle = "Do you know who owns the land involved in the appeal?" %}
    {% endif %}
    {% set knowTheOwnersRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/know-the-owners",
          text: "Change",
          visuallyHiddenText: "if you know who owns the rest of the land involved in the appeal",
          attributes: {
            "data-cy": "change-know-the-owners"
          }
        }
      ]
    } %}
    {% set knowTheOwnersRow = {
      key: { text: summaryField(knowTheOwnersRowTitle, { "data-cy": "know-the-owners-label" }) },
      value: { text: summaryField(
        {
          "yes": "Yes, I know who owns all the land",
          "some": "I know who owns some of the land",
          "no": "No, I do not know who owns any of the land"
        }[appeal.appealSiteSection.siteOwnership.knowsTheOwners],
        { "data-cy": "know-the-owners" }
      ) },
      actions: knowTheOwnersRowActions if isPdf !== true
    } %}
    {% set identifyingTheLandownersRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/identifying-the-owners",
          text: "Change",
          visuallyHiddenText: "if you have attempted to identify the landowners",
          attributes: {
            "data-cy": "change-identifying-the-landowners"
          }
        }
      ]
    } %}
    {% set identifyingTheLandownersRow = {
      key: { text: summaryField("Identifying the" + otherText + " landowners", { "data-cy": "identifying-the-landowners-label" }) },
      value: { text: summaryField(
        "I confirm that I've attempted to identify all the" + otherText + " landowners, but have not been successful",
        { "data-cy": "identifying-the-landowners" }
      ) },
      actions: identifyingTheLandownersRowActions if isPdf !== true
    } %}
    {% set advertisingYourAppealRowHtml %}
      <ul class="govuk-list">
        <li>{{ summaryField(
          "I've advertised my appeal in the press",
          { "data-cy": "advertising-your-appeal-1" }
        ) }}</li>
        <li>{{ summaryField(
          "I've done this within the last 21 days",
          { "data-cy": "advertising-your-appeal-2" }
        ) }}</li>
        <li>{{ summaryField(
          "I used a copy of the form in annexe 2A or 2B",
          { "data-cy": "advertising-your-appeal-3" }
        ) }}</li>
      </ul>
    {% endset %}
    {% set advertisingYourAppealRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/advertising-your-appeal",
          text: "Change",
          visuallyHiddenText: "if you have advertised your appeal",
          attributes: {
            "data-cy": "change-advertising-your-appeal"
          }
        }
      ]
    } %}
    {% set advertisingYourAppealRow = {
      key: { text: summaryField(
        "Advertising your appeal",
        { "data-cy": "advertising-your-appeal-label" }
      ) },
      value: { html: advertisingYourAppealRowHtml },
      actions: advertisingYourAppealRowActions if isPdf !== true
    } %}
    {% set isAgriculturalHoldingRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/agricultural-holding",
          text: "Change",
          visuallyHiddenText: "if the appeal site is part of an agricultural holding",
          attributes: {
            "data-cy": "change-is-agricultural-holding"
          }
        }
      ]
    } %}
    {% set isAgriculturalHoldingRow = {
      key: { text: summaryField(
        "Is the appeal site part of an agricultural holding?",
        { "data-cy": "is-agricultural-holding-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.appealSiteSection.agriculturalHolding.isAgriculturalHolding,
        { "data-cy": "is-agricultural-holding" }
      ) },
      actions: isAgriculturalHoldingRowActions if isPdf !== true
    } %}
    {% set isAgriculturalHoldingTenantRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/are-you-a-tenant",
          text: "Change",
          visuallyHiddenText: "if you are a tenant of the agricultural holding",
          attributes: {
            "data-cy": "change-is-agricultural-holding-tenant"
          }
        }
      ]
    } %}
    {% set isAgriculturalHoldingTenantRow = {
      key: { text: summaryField(
        "Are you a tenant of the agricultural holding?",
        { "data-cy": "is-agricultural-holding-tenant-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.appealSiteSection.agriculturalHolding.isTenant,
        { "data-cy": "is-agricultural-holding-tenant" }
      ) },
      actions: isAgriculturalHoldingTenantRowActions if isPdf !== true
    } %}
    {% set hasOtherTenantsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/other-tenants",
          text: "Change",
          visuallyHiddenText: "if there are any other tenants",
          attributes: {
            "data-cy": "change-has-other-tenants"
          }
        }
      ]
    } %}
    {% set hasOtherTenantsRow = {
      key: { text: summaryField(
        "Are there any other tenants?",
        { "data-cy": "has-other-tenants-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.appealSiteSection.agriculturalHolding.hasOtherTenants,
        { "data-cy": "has-other-tenants" }
      ) },
      actions: hasOtherTenantsRowActions if isPdf !== true
    } %}
    {% set tellingTheTenantsOtherText = "" %}
    {% if appeal.appealSiteSection.agriculturalHolding.isTenant %}
      {% set tellingTheTenantsOtherText = " other" %}
    {% endif %}
    {% set tellingTheTenantsRowHtml %}
      <ul class="govuk-list">
        <li>{{ summaryField(
          "I've told all the" + tellingTheTenantsOtherText + " tenants about my appeal",
          { "data-cy": "telling-the-tenants-1" }
        ) }}</li>
        <li>{{ summaryField(
          "I've done this within the last 21 days",
          { "data-cy": "telling-the-tenants-2" }
        ) }}</li>
        <li>{{ summaryField(
          "I used a copy of the form in annexe 2a",
          { "data-cy": "telling-the-tenants-3" }
        ) }}</li>
      </ul>
    {% endset %}
    {% set tellingTheTenantsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/telling-the-tenants",
          text: "Change",
          visuallyHiddenText: "if you know who owns the rest of the land involved in the appeal",
          attributes: {
            "data-cy": "change-telling-the-tenants"
          }
        }
      ]
    } %}
    {% set tellingTheTenantsRow = {
      key: { text: summaryField(
        "Telling the" + tellingTheTenantsOtherText + " tenants",
        { "data-cy": "telling-the-tenants-label" }
      ) },
      value: { html: tellingTheTenantsRowHtml },
      actions: tellingTheTenantsRowActions if isPdf !== true
    } %}
    {% set visibleFromRoad = appeal.appealSiteSection.visibleFromRoad %}
    {% set visibleFromRoadRowHtml = boolToSentenceCaseField(
      visibleFromRoad.isVisible,
      { "data-cy": "is-visible-from-road" }
    ) %}
    {% if not visibleFromRoad.isVisible %}
      {% set visibleFromRoadRowHtml = visibleFromRoadRowHtml + "<p class='govuk-body govuk-!-margin-top-2' data-cy='visible-from-road-details'>" + visibleFromRoad.details | nl2br + "</p>" %}
    {% endif %}
    {% set visibleFromRoadRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/visible-from-road",
          text: "Change",
          visuallyHiddenText: "if the site is visible from a public road",
          attributes: {
            "data-cy": "change-is-visible-from-road"
          }
        }
      ]
    } %}
    {% set visibleFromRoadRow = {
      key: { text: summaryField(
        "Visible from a public road",
        { "data-cy": "is-visible-from-road-label" }
      ) },
      value: { html: visibleFromRoadRowHtml },
      actions: visibleFromRoadRowActions if isPdf !== true
    } %}
    {% set healthAndSafety = appeal.appealSiteSection.healthAndSafety %}
    {% set healthAndSafetyRowHtml = boolToSentenceCaseField(
      healthAndSafety.hasIssues,
      { "data-cy": "has-health-safety-issues" }
    ) %}
    {% if healthAndSafety.hasIssues %}
      {% set healthAndSafetyRowHtml = healthAndSafetyRowHtml + "<p class='govuk-body govuk-!-margin-top-2' data-cy='health-safety-details'>" + healthAndSafety.details | nl2br + "</p>" %}
    {% endif %}
    {% set healthAndSafetyRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/health-safety-issues",
          text: "Change",
          visuallyHiddenText: "if there are any health and safety issues on the appeal site",
          attributes: {
            "data-cy": "change-has-health-safety-issues"
          }
        }
      ]
    } %}
    {% set healthAndSafetyRow = {
      key: { text: summaryField(
        "Health and safety issues",
        { "data-cy": "has-health-safety-issues-label" }
      ) },
      value: { html: healthAndSafetyRowHtml },
      actions: healthAndSafetyRowActions if isPdf !== true
    } %}
    {% set appealSiteRows = [siteAddressRow, ownsAllTheLandRow] %}
    {% if not appeal.appealSiteSection.siteOwnership.ownsAllTheLand %}
      {% if appeal.appealSiteSection.siteOwnership.knowsTheOwners === 'yes' or appeal.appealSiteSection.siteOwnership.knowsTheOwners === 'some' %}
        {% set appealSiteRows = (appealSiteRows.push(tellingOtherLandownersRow), appealSiteRows) %}
      {% endif %}
      {% if appeal.appealSiteSection.siteOwnership.knowsTheOwners %}
        {% set appealSiteRows = (appealSiteRows.push(knowTheOwnersRow), appealSiteRows) %}
      {% endif %}
    {% endif %}
    {% if not appeal.appealSiteSection.siteOwnership.ownsAllTheLand %}
      {% if appeal.appealSiteSection.siteOwnership.knowsTheOwners === 'some' or appeal.appealSiteSection.siteOwnership.knowsTheOwners === 'no' %}
        {% set appealSiteRows = (appealSiteRows.push(identifyingTheLandownersRow), appealSiteRows) %}
        {% set appealSiteRows = (appealSiteRows.push(advertisingYourAppealRow), appealSiteRows) %}
      {% endif %}
    {% endif %}
    {% set appealSiteRows = (appealSiteRows.push(isAgriculturalHoldingRow), appealSiteRows) %}
    {% if appeal.appealSiteSection.agriculturalHolding.isAgriculturalHolding %}
      {% set appealSiteRows = (appealSiteRows.push(isAgriculturalHoldingTenantRow), appealSiteRows) %}
      {% if appeal.appealSiteSection.agriculturalHolding.isTenant %}
        {% set appealSiteRows = (appealSiteRows.push(hasOtherTenantsRow), appealSiteRows) %}
      {% endif %}
      {% if not appeal.appealSiteSection.agriculturalHolding.isTenant or appeal.appealSiteSection.agriculturalHolding.hasOtherTenants %}
        {% set appealSiteRows = (appealSiteRows.push(tellingTheTenantsRow), appealSiteRows) %}
      {% endif %}
    {% endif %}
    {% set appealSiteRows = (appealSiteRows.push(visibleFromRoadRow, healthAndSafetyRow), appealSiteRows) %}
    {{ govukSummaryList({
      classes: "govuk-summary-list govuk-!-margin-bottom-9",
      rows: appealSiteRows
    }) }}

    <h2 class="{{ headingClass }}" data-cy="deciding-your-appeal-heading">Deciding your appeal</h2>
    {% set procedureTypeRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/how-decide-appeal",
          text: "Change",
          visuallyHiddenText: "how you would prefer us to decide your appeal",
          attributes: {
            "data-cy": "change-procedure-type"
          }
        }
      ]
    } %}
    {% set procedureTypeRow = {
      key: { text: summaryField(
        "How would you prefer us to decide your appeal?",
        { "data-cy": "procedure-type-label" }
      ) },
      value: { text: summaryField(
        appeal.appealDecisionSection.procedureType,
        { "data-cy": "procedure-type" }
      ) },
      actions: procedureTypeRowActions if isPdf !== true
    } %}
    {% set hearingReasonRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/why-hearing",
          text: "Change",
          visuallyHiddenText: "why you would prefer a hearing",
          attributes: {
            "data-cy": "change-hearing-reason"
          }
        }
      ]
    } %}
    {% set hearingReasonRow = {
      key: { text: summaryField(
        "Why would you prefer a hearing?",
        { "data-cy": "hearing-reason-label" }
      ) },
      value: {
        html: '<span data-cy="hearing-reason">' + appeal.appealDecisionSection.hearing.reason | nl2br + '</span>'
      },
      actions: hearingReasonRowActions if isPdf !== true
    } %}
    {% set inquiryExpectedDaysRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/expect-inquiry-last",
          text: "Change",
          visuallyHiddenText: "how many days you would expect the inquiry to last",
          attributes: {
            "data-cy": "change-inquiry-expected-days"
          }
        }
      ]
    } %}
    {% set inquiryExpectedDaysRow = {
      key: { text: summaryField(
        "How many days would you expect the inquiry to last?",
        { "data-cy": "inquiry-expected-days-label" }
      ) },
      value: { text: summaryField(
        appeal.appealDecisionSection.inquiry.expectedDays,
        { "data-cy": "inquiry-expected-days" }
      ) },
      actions: inquiryExpectedDaysRowActions if isPdf !== true
    } %}
    {% set inquiryReasonRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/why-inquiry",
          text: "Change",
          visuallyHiddenText: "why you would prefer a inquiry",
          attributes: {
            "data-cy": "change-inquiry-reason"
          }
        }
      ]
    } %}
    {% set inquiryReasonRow = {
      key: { text: summaryField(
        "Why would you prefer an inquiry?",
        { "data-cy": "inquiry-reason-label" }
      ) },
      value: {
        html: '<span data-cy="inquiry-reason">' + appeal.appealDecisionSection.inquiry.reason | nl2br + '</span>'
      },
      actions: inquiryReasonRowActions if isPdf !== true
    } %}
    {% set draftStatementOfCommonGroundRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/draft-statement-common-ground",
          text: "Change",
          visuallyHiddenText: "the draft statement of common ground",
          attributes: {
            "data-cy": "change-draft-statement-of-common-ground"
          }
        }
      ]
    } %}
    {% set draftStatementOfCommonGroundRow = {
      key: { text: summaryField(
        "Draft statement of common ground",
        { "data-cy": "draft-statement-of-common-ground-label" }
      ) },
      value: { html: uploadedFileLink(
        appeal.id,
        appeal.appealDecisionSection.draftStatementOfCommonGround.uploadedFile,
        { "data-cy": "draft-statement-of-common-ground" }
      ) if isPdf !== true else summaryField(
        appeal.appealDecisionSection.draftStatementOfCommonGround.uploadedFile.name,
        { "data-cy": "draft-statement-of-common-ground" }
      ) },
      actions: draftStatementOfCommonGroundRowActions if isPdf !== true
    } %}
    {% set decidingYourAppealRows = [procedureTypeRow] %}
    {% if appeal.appealDecisionSection.procedureType === 'Hearing' %}
      {% set decidingYourAppealRows = [procedureTypeRow, hearingReasonRow, draftStatementOfCommonGroundRow] %}
    {% elif appeal.appealDecisionSection.procedureType === 'Inquiry' %}
      {% set decidingYourAppealRows = [procedureTypeRow, inquiryReasonRow, inquiryExpectedDaysRow, draftStatementOfCommonGroundRow] %}
    {% endif %}
    {{ govukSummaryList({
      classes: "govuk-summary-list govuk-!-margin-bottom-9",
      rows: decidingYourAppealRows
    }) }}

    <h2 class="{{ headingClass }}" data-cy="planning-application-heading">Your planning application</h2>
    {% set originalDecisionNoticeRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/original-decision-notice",
          text: "Change",
          visuallyHiddenText: "the original decision notice",
          attributes: {
            "data-cy": "change-original-decision-notice"
          }
        }
      ]
    } %}
    {% set originalDecisionNoticeRow = {
      key: { text: summaryField(
        "Decision notice from your original planning application",
        { "data-cy": "original-decision-notice-label" }
      ) },
      value: { text: uploadedFileLink(
        appeal.id,
        appeal.planningApplicationDocumentsSection.originalDecisionNotice.uploadedFile,
        { "data-cy": "original-decision-notice" }
      ) if isPdf !== true else summaryField(
        appeal.planningApplicationDocumentsSection.originalDecisionNotice.uploadedFile.name,
        { "data-cy": "original-decision-notice" }
      ) } ,
      actions: originalDecisionNoticeRowActions if isPdf !== true
    } %}
    {% set applicationFormRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/application-form",
          text: "Change",
          visuallyHiddenText: "the planning application form",
          attributes: {
            "data-cy": "change-application-form"
          }
        }
      ]
    } %}
    {% set applicationFormRow = {
      key: { text: summaryField(
        "Planning application form",
        { "data-cy": "application-form-label" }
      ) },
      value: { text: uploadedFileLink(
        appeal.id,
        appeal.planningApplicationDocumentsSection.originalApplication.uploadedFile,
        { "data-cy": "application-form" }
      ) if isPdf !== true else summaryField(
        appeal.planningApplicationDocumentsSection.originalApplication.uploadedFile.name,
        { "data-cy": "application-form" }
      ) } ,
      actions: applicationFormRowActions if isPdf !== true
    } %}
    {% set hasOwnershipCertificateRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/application-certificates-included",
          text: "Change",
          visuallyHiddenText: "separate ownership certificate and agricultural land declaration",
          attributes: {
            "data-cy": "separate-ownership-certificate"
          }
        }
      ]
    } %}
    {% set hasOwnershipCertificateRow = {
      key: { text: summaryField(
        "Did you submit a separate ownership certificate and agricultural land declaration with your application?",
        { "data-cy": "has-ownership-certificate-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.planningApplicationDocumentsSection.ownershipCertificate.submittedSeparateCertificate,
        { "data-cy": "has-ownership-certificate" }
      ) },
      actions: hasOwnershipCertificateRowActions if isPdf !== true
    } %}
    {% set ownershipCertificateRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/certificates",
          text: "Change",
          visuallyHiddenText: "the ownership certificate",
          attributes: {
            "data-cy": "ownership-certificate"
          }
        }
      ]
    } %}
    {% set planningApplicationNumberRow = {
      key: { text: summaryField(
        "Planning application number",
        { "data-cy": "planning-application-number-label" }
      ) },
      value: { text: summaryField(
        appeal.planningApplicationNumber,
        { "data-cy": "planning-application-number" }
      ) },
      actions: planningApplicationNumberRowActions if isPdf !== true
    } %}
    {% set planningApplicationNumberRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/planning-application-number",
          text: "Change",
          visuallyHiddenText: "the planning application number",
          attributes: {
            "data-cy": "planning-application-number"
          }
        }
      ]
    } %}
    {% set ownershipCertificateRow = {
      key: { text: summaryField(
        "Ownership certificate and agricultural land declaration",
        { "data-cy": "ownership-certificate-label" }
      ) },
      value: { text: uploadedFileLink(
        appeal.id,
        appeal.planningApplicationDocumentsSection.ownershipCertificate.uploadedFile,
        { "data-cy": "ownership-certificate" }
      ) if isPdf !== true else summaryField(
        appeal.planningApplicationDocumentsSection.ownershipCertificate.uploadedFile.name,
        { "data-cy": "ownership-certificate" }
      ) },
      actions: ownershipCertificateRowActions if isPdf !== true
    } %}
    {% set isDescriptionOfDevelopmentCorrectRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/proposed-development-changed",
          text: "Change",
          visuallyHiddenText: "Proposed development changed after submitting the application",
          attributes: {
            "data-cy": "description-development-correct"
          }
        }
      ]
    } %}
    {% set isDescriptionOfDevelopmentCorrectRow = {
      key: { text: summaryField(
        "Is the description of development on your application form still correct?",
        { "data-cy": "description-development-correct-label" }
      ) },
      value: { text: boolToSentenceProposedDevelopmentChanged(
        appeal.planningApplicationDocumentsSection.descriptionDevelopmentCorrect.isCorrect,
        appeal.planningApplicationDocumentsSection.descriptionDevelopmentCorrect.details,
        { "data-cy": "description-development-correct" }
      ) },
      actions: isDescriptionOfDevelopmentCorrectRowActions if isPdf !== true
    } %}
    {% set plansDrawingsSupportingDocumentsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/plans-drawings-documents",
          text: "Change",
          visuallyHiddenText: "if you have any new plans or drawings that support your appeal",
          attributes: {
            "data-cy": "change-plans-drawings-supporting-documents"
          }
        }
      ]
    } %}
    {% set plansDrawingsSupportingDocumentsRow = {
      key: { text: summaryField(
        "Plans, drawings and supporting documents",
        { "data-cy": "plans-drawings-supporting-documents-label" }
      ) },
      value: { html: uploadedFileList(
        appeal.planningApplicationDocumentsSection.plansDrawingsSupportingDocuments.uploadedFiles,
        appeal.id,
        "plans-drawings-supporting-documents",
        isPdf !== true
      ) },
      actions: plansDrawingsSupportingDocumentsRowActions if isPdf !== true
    } %}
    {% set hasDesignAccessStatementRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/design-access-statement-submitted",
          text: "Change",
          visuallyHiddenText: "if you submitted a design and access statement with your application",
          attributes: {
            "data-cy": "change-has-design-access-statement"
          }
        }
      ]
    } %}
    {% set hasDesignAccessStatementRow = {
      key: { text: summaryField(
        "Design and access statement submitted with application",
        { "data-cy": "has-design-access-statement-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.planningApplicationDocumentsSection.designAccessStatement.isSubmitted,
        { "data-cy": "has-design-access-statement" }
      ) },
      actions: hasDesignAccessStatementRowActions if isPdf !== true
    } %}
    {% set designAccessStatementRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/design-access-statement",
          text: "Change",
          visuallyHiddenText: "the design and access statement",
          attributes: {
            "data-cy": "change-design-access-statement"
          }
        }
      ]
    } %}
    {% set designAccessStatementRow = {
      key: { text: summaryField(
        "Design and access statement",
        { "data-cy": "design-access-statement-label" }
      ) },
      value: { text: uploadedFileLink(
        appeal.id,
        appeal.planningApplicationDocumentsSection.designAccessStatement.uploadedFile,
        { "data-cy": "design-access-statement" }
      ) if isPdf !== true else summaryField(
        appeal.planningApplicationDocumentsSection.designAccessStatement.uploadedFile.name,
        { "data-cy": "design-access-statement" }
      ) },
      actions: designAccessStatementRowActions if isPdf !== true
    } %}
    {% set decisionLetterRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/decision-letter",
          text: "Change",
          visuallyHiddenText: "the decision letter",
          attributes: {
            "data-cy": "change-decision-letter"
          }
        }
      ]
    } %}
    {% set decisionLetterRow = {
      key: { text: summaryField(
        "Decision letter",
        { "data-cy": "decision-letter-label" }
      ) },
      value: { text: uploadedFileLink(
        appeal.id,
        appeal.planningApplicationDocumentsSection.decisionLetter.uploadedFile,
        { "data-cy": "decision-letter" }
      ) if isPdf !== true else summaryField(
        appeal.planningApplicationDocumentsSection.decisionLetter.uploadedFile.name,
        { "data-cy": "decision-letter" }
      ) },
      actions: decisionLetterRowActions if isPdf !== true
    } %}
    {% set letterConfirmingPlanningApplicationRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/letter-confirming-application",
          text: "Change",
          visuallyHiddenText: "the letter confirming the planning application",
          attributes: {
            "data-cy": "change-letter-confirming-planning-application"
          }
        }
      ]
    } %}
    {% set letterConfirmingPlanningApplicationRow = {
      key: { text: summaryField(
        "Letter confirming your planning application",
        { "data-cy": "letter-confirming-planning-application-label" }
      ) },
      value: { text: uploadedFileLink(
        appeal.id,
        appeal.planningApplicationDocumentsSection.letterConfirmingApplication.uploadedFile,
        { "data-cy": "letter-confirming-planning-application" }
      ) if isPdf !== true else summaryField(
        appeal.planningApplicationDocumentsSection.letterConfirmingApplication.uploadedFile.name,
        { "data-cy": "letter-confirming-planning-application" }
      ) },
      actions: letterConfirmingPlanningApplicationRowActions if isPdf !== true
    } %}
    {% if appeal.typeOfPlanningApplication === 'removal-or-variation-of-conditions' and appeal.eligibility.applicationDecision === 'nodecisionreceived' %}
      {% set planningApplicationRows = [originalDecisionNoticeRow, applicationFormRow, hasOwnershipCertificateRow] %}
    {% else %}
      {% set planningApplicationRows = [applicationFormRow, hasOwnershipCertificateRow] %}
    {% endif %}
    {% if isPdf === true %}
       {% set planningApplicationRows = (planningApplicationRows.push(planningApplicationNumberRow), planningApplicationRows) %}
    {% endif %}
    {% if appeal.planningApplicationDocumentsSection.ownershipCertificate.submittedSeparateCertificate %}
      {% set planningApplicationRows = (planningApplicationRows.push(ownershipCertificateRow), planningApplicationRows) %}
    {% endif %}
    {% set planningApplicationRows = (planningApplicationRows.push(
        applicationNumberRow,
        isDescriptionOfDevelopmentCorrectRow,
        plansDrawingsSupportingDocumentsRow,
        hasDesignAccessStatementRow
      ), planningApplicationRows)
    %}
    {% if appeal.planningApplicationDocumentsSection.designAccessStatement.isSubmitted %}
      {% set planningApplicationRows = (planningApplicationRows.push(designAccessStatementRow), planningApplicationRows) %}
    {% endif %}
    {% if appeal.eligibility.applicationDecision !== 'nodecisionreceived' %}
      {% set planningApplicationRows = (planningApplicationRows.push(decisionLetterRow), planningApplicationRows) %}
    {% else %}
      {% set planningApplicationRows = (planningApplicationRows.push(letterConfirmingPlanningApplicationRow), planningApplicationRows) %}
    {% endif %}
    {{ govukSummaryList({
      classes: "govuk-summary-list govuk-!-margin-bottom-9",
      rows: planningApplicationRows
    }) }}

    <h2 class="{{ headingClass }}" data-cy="your-appeal-heading">Your appeal</h2>
    {% set appealStatementRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/appeal-statement",
          text: "Change",
          visuallyHiddenText: "the appeal statement",
          attributes: {
            "data-cy": "change-appeal-statement"
          }
        }
      ]
    } %}
    {% set appealStatementRow = {
      key: { text: summaryField(
        "Appeal statement",
        { "data-cy": "appeal-statement-label" }
      ) },
      value: { html: uploadedFileLink(
        appeal.id,
        appeal.appealDocumentsSection.appealStatement.uploadedFile,
        { "data-cy": "appeal-statement" }
      ) if isPdf !== true else summaryField(
        appeal.appealDocumentsSection.appealStatement.uploadedFile.name,
        { "data-cy": "appeal-statement" }
      ) },
      actions: appealStatementRowActions if isPdf !== true
    } %}
    {% set hasPlansDrawingsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/new-plans-drawings",
          text: "Change",
          visuallyHiddenText: "if you have any new plans or drawings that support your appeal",
          attributes: {
            "data-cy": "change-has-plans-drawings"
          }
        }
      ]
    } %}
    {% set hasPlansDrawingsRow = {
      key: { text: summaryField(
        "Any plans or drawings to support your appeal",
        { "data-cy": "has-plans-drawings-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.appealDocumentsSection.plansDrawings.hasPlansDrawings,
        { "data-cy": "has-plans-drawings" }
      ) },
      actions: hasPlansDrawingsRowActions if isPdf !== true
    } %}
    {% set plansDrawingsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/plans-drawings",
          text: "Change",
          visuallyHiddenText: "if you have any new plans or drawings that support your appeal",
          attributes: {
            "data-cy": "change-plans-drawings"
          }
        }
      ]
    } %}
    {% set plansDrawingsRow = {
      key: { text: summaryField(
        "Plans and drawings",
        { "data-cy": "plans-drawings-label" }
      ) },
      value: { html: uploadedFileList(
        appeal.appealDocumentsSection.plansDrawings.uploadedFiles,
        appeal.id,
        "plans-drawings",
        isPdf !== true
      ) },
      actions: plansDrawingsRowActions if isPdf !== true
    } %}
    {% set planToSubmitPlanningObligationRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/planning-obligation-planned",
          text: "Change",
          visuallyHiddenText: "if you plan to submit a planning obligation to support your appeal",
          attrivbutes: {
            "data-cy": "plan-to-submit-planning-obligation"
          }
        }
      ]
    } %}
    {% set planToSubmitPlanningObligationRow = {
      key: { text: summaryField(
        "Do you plan to submit a planning obligation to support your appeal?",
        { "data-cy": "plan-to-submit-planning-obligation-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.appealDocumentsSection.planningObligations.plansPlanningObligation,
        { "data-cy": "plan-to-submit-planning-obligation" }
      ) },
      actions: planToSubmitPlanningObligationRowActions if isPdf !== true
    } %}
    {% set planningObligationStatusRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/planning-obligation-status",
          text: "Change",
          visuallyHiddenText: "what is the status of your planning obligation",
          attrivbutes: {
            "data-cy": "planning-obligation-status"
          }
        }
      ]
    } %}
    {% set planningObligationStatusRow = {
      key: { text: summaryField(
        "What is the status of your planning obligation?",
        { "data-cy": "planning-obligation-status-label" }
      ) },
      value: { text: formatPlanningObligationStatus(
        appeal.appealDocumentsSection.planningObligationDeadline.planningObligationStatus,
        { "data-cy": "planning-obligation-status" }
      ) },
      actions: planningObligationStatusRowActions if isPdf !== true
    } %}
    {% set planningObligationRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/planning-obligation",
          text: "Change",
          visuallyHiddenText: "the planning obligation",
          attributes: {
            "data-cy": "planning-obligation"
          }
        }
      ]
    } %}
    {% set planningObligationRow = {
      key: { text: summaryField(
        "Planning obligation",
        { "data-cy": "planning-obligation-label" }
      ) },
      value: { text: uploadedFileList(
        appeal.appealDocumentsSection.planningObligations.uploadedFiles,
        appeal.id,
        'planning-obligation',
        isPdf !== true
      ) },
      actions: planningObligationRowActions if isPdf !== true
    } %}
    {% set draftPlanningObligationRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/draft-planning-obligation",
          text: "Change",
          visuallyHiddenText: "the draft planning obligation",
          attributes: {
            "data-cy": "draft-planning-obligation"
          }
        }
      ]
    } %}
    {% set draftPlanningObligationRow = {
      key: { text: summaryField(
        "Planning obligation",
        { "data-cy": "draft-planning-obligation-label" }
      ) },
      value: { html: uploadedFileList(
        appeal.appealDocumentsSection.draftPlanningObligations.uploadedFiles,
        appeal.id,
        'draft-planning-obligation',
        isPdf !== true
      ) },
      actions: draftPlanningObligationRowActions if isPdf !== true
    } %}
    {% set hasSupportingDocumentsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/new-documents",
          text: "Change",
          visuallyHiddenText: "if you want to submit any new supporting documents with your appeal",
          attributes: {
            "data-cy": "change-has-supporting-documents"
          }
        }
      ]
    } %}
    {% set hasSupportingDocumentsRow = {
      key: { text: summaryField(
        "Any documents to support your appeal",
        { "data-cy": "has-supporting-documents-label" }
      ) },
      value: { text: boolToSentenceCaseField(
        appeal.appealDocumentsSection.supportingDocuments.hasSupportingDocuments,
        { "data-cy": "has-supporting-documents" }
      ) },
      actions: hasSupportingDocumentsRowActions if isPdf !== true
    } %}
    {% set supportingDocumentsRowActions = {
      items: [
        {
          href: "/full-appeal/submit-appeal/other-supporting-documents",
          text: "Change",
          visuallyHiddenText: "if you have any new plans or drawings that support your appeal",
          attributes: {
            "data-cy": "change-supporting-documents"
          }
        }
      ]
    } %}
    {% set supportingDocumentsRow = {
      key: { text: summaryField(
        "Supporting documents",
        { "data-cy": "supporting-documents-label" }
      ) },
      value: { html: uploadedFileList(
        appeal.appealDocumentsSection.supportingDocuments.uploadedFiles,
        appeal.id,
        "supporting-documents",
        isPdf !== true
      ) },
      actions: supportingDocumentsRowActions if isPdf !== true
    } %}
    {% set yourAppealRows = [appealStatementRow, hasPlansDrawingsRow, planToSubmitPlanningObligationRow] %}
    {% if appeal.appealDocumentsSection.planningObligations.plansPlanningObligation %}
      {% set yourAppealRows = (yourAppealRows.push(planningObligationStatusRow), yourAppealRows) %}
      {% if appeal.appealDocumentsSection.planningObligationDeadline.planningObligationStatus == 'finalised' %}
        {% set yourAppealRows = (yourAppealRows.push(planningObligationRow), yourAppealRows) %}
      {% elif appeal.appealDocumentsSection.planningObligationDeadline.planningObligationStatus == 'draft' %}
        {% set yourAppealRows = (yourAppealRows.push(draftPlanningObligationRow), yourAppealRows) %}
      {% endif %}
    {% endif %}
    {% if appeal.appealDocumentsSection.plansDrawings.hasPlansDrawings %}
      {% set yourAppealRows = (yourAppealRows.push(plansDrawingsRow), yourAppealRows) %}
    {% endif %}
    {% set yourAppealRows = (yourAppealRows.push(hasSupportingDocumentsRow), yourAppealRows) %}
    {% if appeal.appealDocumentsSection.supportingDocuments.hasSupportingDocuments %}
      {% set yourAppealRows = (yourAppealRows.push(supportingDocumentsRow), yourAppealRows) %}
    {% endif %}
    {{ govukSummaryList({
      classes: "govuk-summary-list govuk-!-margin-bottom-9",
      rows: yourAppealRows
    }) }}
{% endmacro %}
