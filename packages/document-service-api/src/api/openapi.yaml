---
openapi: 3.0.0
info:
  title: Appeals Document Service API Documentation
  version: 1.0.0
  license:
    name: www.foundry4.com
servers:
  - url: http://localhost:3001/
paths:
  "/api/v1/{applicationId}":
    description: Resources related to application specific documents
    get:
      tags:
        - Document
      operationId: getApplicationDocuments
      description: Obtains all document data related to a given application ID
      parameters:
        - "$ref": "#/components/parameters/applicationId"
      responses:
        '200':
          description: Successfully retrieved documents for the given Id
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentList"
        '404':
          "$ref": "#/components/responses/NotFound"
    post:
      tags:
        - Document
      operationId: postDocument
      description: Creates a new file upload against the specified application Id
      parameters:
        - "$ref": "#/components/parameters/applicationId"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '202':
          description: Confirmation that the file upload has been received but not
            yet validated (persisted and virus scanned)
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Document"
        '400':
          description: The file could not be processed due to a problem with the request
            (e.g. missing parameter, invalid filename)
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: The file is too large and cannot be accepted
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error. Try again later
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/{applicationId}/{documentId}":
    description: Retrieves a specific documents meta-data
    get:
      tags:
        - Document
      operationId: getDocument
      description: Returns the specific document meta-data
      parameters:
        - "$ref": "#/components/parameters/applicationId"
        - "$ref": "#/components/parameters/documentId"
      responses:
        '200':
          description: Successfully retrieved this document
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Document"
        '400':
          description: Unable to process this request.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Document could be found for this Id
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
        - Document
      operationId: deleteDocument
      description: Deletes a document by ID
      parameters:
        - "$ref": "#/components/parameters/applicationId"
        - "$ref": "#/components/parameters/documentId"
      responses:
        '204':
          description: Successfully deleted this document
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentDownload"
        '404':
          description: Document could be found for this Id
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/{applicationId}/{documentId}/file":
    description: Retrieves a specific documents meta-data
    get:
      tags:
        - Document
      operationId: downloadDocument
      description: Downloads the document for display
      parameters:
        - "$ref": "#/components/parameters/applicationId"
        - "$ref": "#/components/parameters/documentId"
        - in: query
          name: base64
          schema:
            type: boolean
          required: false
          description: Display the file in base64
      responses:
        '200':
          description: Successfully retrieved this document
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentDownload"
            application/pdf:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: Document could be found for this Id
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/migrate-metadata":
    description: Migrates the existing document metadata from Cosmos DB to Blob Storage
    get:
      tags:
        - Document
      operationId: migrateMetadata
      description: Migrates the existing document metadata from Cosmos DB to Blob Storage
      parameters: []
      responses:
        '200':
          description: Metadata migration was successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MigrateMetadata"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MigrateMetadataError"
components:
  parameters:
    applicationId:
      in: path
      name: applicationId
      required: true
      schema:
        type: string
      description: Supplied reference number for the original planning application
        to which this appeal document relates
    documentId:
      in: path
      name: documentId
      required: true
      schema:
        type: string
        pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
      description: The uuid for this specific document
  examples:
    documentUpload:
      description: A sample file upload
      value:
        id: 78afb587-68ae-4961-a290-ba02193b9328
        applicationId: 14/D/00217
        name: site215-appeal-document.pdf
        uploadDate: '2020-01-01T05:59:00Z'
        mimeType: application/pdf
        size: 748246
    documentDownload:
      description: An example of a document response returned from the API for a previously
        uploaded and persisted document
      value:
        id: 30e8fb77-2f42-4aab-8e83-ed1e39e79c3e
        applicationId: 14/D/00217
        name: site0345d-barratt-appeal-document.pdf
        uploadDate: '2020-01-01T05:59:00Z'
        mimeType: application/pdf
        blobStorageLocation: 1234567890/99c6cbd9-6c3d-4241-8d96-8765a6ecd700/sample-appeal-document.pdf
        location: https://lpatest.blob.core.windows.net/pins-documents/site0345d-barratt-appeal-document.pdf
        size: 2128246
  schemas:
    Document:
      type: object
      properties:
        id:
          type: string
          pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
          description: The unique ID (uuid) for this document upload
        applicationId:
          type: string
          description: The original application that this appeal document relates
            to
          required:
            - 'true'
        name:
          type: string
          minLength: 5
          example: sample-appeal-document.pdf
        uploadDate:
          type: string
          format: date
          description: The date and time this upload was received
          example: '2020-01-01T05:59:00Z'
          minLength: 20
          maxLength: 20
        mimeType:
          type: string
          description: The mime type
          example: application/pdf
        blobStorageLocation:
          type: string
          description: The blob storage location
          example: 1234567890/99c6cbd9-6c3d-4241-8d96-8765a6ecd700/sample-appeal-document.pdf
        size:
          type: integer
          description: The length of the file in bytes
        location:
          type: string
          format: uri
          description: The location on disk
    DocumentList:
      type: array
      items:
        "$ref": "#/components/schemas/Document"
    DocumentDownload:
      allOf:
        - "$ref": "#/components/schemas/Document"
        -
          type: object
          properties:
            dataSize:
              type: integer
              description: The length of the file in bytes as returned in "data"
            data:
              type: string
              format: byte
    MigrateMetadata:
      type: object
      properties:
        documentsFound:
          type: integer
          description: The number of documents found that can be migrated
          example: 1
        documentsMigrated:
          type: integer
          description: The number of documents that were migrated
          example: 1
        migratedDocuments:
          type: array
          items:
            type: object
            properties:
              cosmosDbMetadata:
                type: object
                properties:
                  upload:
                    type: object
                    properties:
                      processed:
                        type: boolean
                        example: true
                      processAttempts:
                        type: integer
                        example: 1
                  _id:
                    type: string
                    example: 6135ed925ea4be0106eb4f31
                  applicationId:
                    type: string
                    example: 6e60a67e-8941-4e20-b580-8dbd69096ee5
                  name:
                    type: string
                    example: test-pdf.pdf
                  uploadDate:
                    type: string
                    example: 2021-09-06T10:29:38.386Z
                  mimeType:
                    type: string
                    example: application/pdf
                  location:
                    type: string
                    example: 5daa6bd935fe6d260fb694cadb58d94a
                  size:
                    type: integer
                    example: 8334
                  id:
                    type: string
                    example: 62494719-48e2-4615-9541-48634a940a36
                  createdAt:
                    type: string
                    example: 2021-09-06T10:29:38.393Z
                  updatedAt:
                    type: string
                    example: 2021-09-06T10:29:38.500Z
                  __v:
                    type: integer
                    example: 0
                  blobStorageLocation:
                    type: string
                    example: 6e60a67e-8941-4e20-b580-8dbd69096ee5/62494719-48e2-4615-9541-48634a940a36/test-pdf.pdf
              blobStorageMetadata:
                type: object
                properties:
                  application_id:
                    type: string
                    example: 6e60a67e-8941-4e20-b580-8dbd69096ee5
                  name:
                    type: string
                    example: test-pdf.pdf
                  upload_date:
                    type: string
                    example: 2021-09-06T10:29:38.386Z
                  mime_type:
                    type: string
                    example: application/pdf
                  location:
                    type: string
                    example: 6e60a67e-8941-4e20-b580-8dbd69096ee5/62494719-48e2-4615-9541-48634a940a36/test-pdf.pdf
                  size:
                    type: string
                    example: '8334'
                  id:
                    type: string
                    example: 62494719-48e2-4615-9541-48634a940a36

    Error:
      type: object
      properties:
        message:
          type: string
          description: Meaningful error description
    MigrateMetadataError:
      type: object
      properties:
        message:
          type: string
          example: Failed to migrate document ab575383-5c51-42d7-9c56-d2d21313d4fe - The specified blob does not exist.\nRequestId:112b0a60-1530-497e-8c9c-5b1a4519543c\nTime:2021-09-06T15:45:50.636Z
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
          example:
            message: Invalid mime type
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
          example:
            message: Not found
tags:
  - name: Document
    description: Resources related to document upload and download
