<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="18" failures="1" errors="0" time="1.028">
  <testsuite name="routes/index" errors="0" failures="0" skipped="0" timestamp="2021-09-19T18:15:22" time="0.643" tests="1">
    <testcase classname="routes/index should define the expected routes" name="routes/index should define the expected routes" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="controllers/documents" errors="0" failures="1" skipped="0" timestamp="2021-09-19T18:15:23" time="0.083" tests="17">
    <testcase classname="controllers/documents getDocumentsForApplication should return documents when given a valid application id" name="controllers/documents getDocumentsForApplication should return documents when given a valid application id" time="0">
    </testcase>
    <testcase classname="controllers/documents getDocumentsForApplication should return an error when given an invalid application id" name="controllers/documents getDocumentsForApplication should return an error when given an invalid application id" time="0.001">
    </testcase>
    <testcase classname="controllers/documents getDocumentsForApplication should return an error when an error is thrown getting all documents" name="controllers/documents getDocumentsForApplication should return an error when an error is thrown getting all documents" time="0.003">
    </testcase>
    <testcase classname="controllers/documents getDocumentById should return a document when given a valid application and document id" name="controllers/documents getDocumentById should return a document when given a valid application and document id" time="0">
    </testcase>
    <testcase classname="controllers/documents getDocumentById should return an error when given an invalid application id" name="controllers/documents getDocumentById should return an error when given an invalid application id" time="0">
    </testcase>
    <testcase classname="controllers/documents getDocumentById should return an error when given an invalid document id" name="controllers/documents getDocumentById should return an error when given an invalid document id" time="0.001">
    </testcase>
    <testcase classname="controllers/documents getDocumentById should return an error when an error is thrown getting the document" name="controllers/documents getDocumentById should return an error when an error is thrown getting the document" time="0">
    </testcase>
    <testcase classname="controllers/documents serveDocumentById should return a document when given a valid application and document id" name="controllers/documents serveDocumentById should return a document when given a valid application and document id" time="0.001">
    </testcase>
    <testcase classname="controllers/documents serveDocumentById should return a document in base64 when given a valid application and document id and base64 flag is true" name="controllers/documents serveDocumentById should return a document in base64 when given a valid application and document id and base64 flag is true" time="0">
    </testcase>
    <testcase classname="controllers/documents serveDocumentById should return an error when no metadata is returned for the given document" name="controllers/documents serveDocumentById should return an error when no metadata is returned for the given document" time="0.001">
    </testcase>
    <testcase classname="controllers/documents serveDocumentById should return an error when an error is thrown getting the document" name="controllers/documents serveDocumentById should return an error when an error is thrown getting the document" time="0">
    </testcase>
    <testcase classname="controllers/documents uploadDocument should return the metadata when a file is uploaded successfully" name="controllers/documents uploadDocument should return the metadata when a file is uploaded successfully" time="0.001">
      <failure>Error: expect(jest.fn()).toBeCalledWith(...expected)

Expected: &quot;mock-container-client&quot;, {&quot;application_id&quot;: &quot;be046963-6cdd-4958-bd58-11be56304329&quot;, &quot;filename&quot;: &quot;document-one.pdf&quot;, &quot;id&quot;: &quot;72c188c7-d034-48a9-b712-c94a1c571f9d&quot;, &quot;location&quot;: &quot;be046963-6cdd-4958-bd58-11be56304329/72c188c7-d034-48a9-b712-c94a1c571f9d/document-one.pdf&quot;, &quot;mime_type&quot;: &quot;application/pdf&quot;, &quot;name&quot;: &quot;document-one.pdf&quot;, &quot;size&quot;: &quot;1000&quot;, &quot;upload_date&quot;: &quot;2021-09-19T18:15:23.226Z&quot;}
Received: {&quot;application_id&quot;: &quot;be046963-6cdd-4958-bd58-11be56304329&quot;, &quot;buffer&quot;: undefined, &quot;filename&quot;: &quot;document-one.pdf&quot;, &quot;id&quot;: &quot;72c188c7-d034-48a9-b712-c94a1c571f9d&quot;, &quot;location&quot;: &quot;be046963-6cdd-4958-bd58-11be56304329/72c188c7-d034-48a9-b712-c94a1c571f9d/document-one.pdf&quot;, &quot;mime_type&quot;: &quot;application/pdf&quot;, &quot;name&quot;: &quot;document-one.pdf&quot;, &quot;size&quot;: &quot;1000&quot;, &quot;upload_date&quot;: &quot;2021-09-19T18:15:23.226Z&quot;}

Number of calls: 1
    at Object.&lt;anonymous&gt; (/Users/ray/WebstormProjects/appeal-planning-decision/packages/document-service-api/src/controllers/documents.spec.js:316:38)</failure>
    </testcase>
    <testcase classname="controllers/documents uploadDocument should return an error when an error is thrown uploading the document" name="controllers/documents uploadDocument should return an error when an error is thrown uploading the document" time="0.001">
    </testcase>
    <testcase classname="controllers/documents deleteDocument should return the correct status when a document is deleted successfully" name="controllers/documents deleteDocument should return the correct status when a document is deleted successfully" time="0">
    </testcase>
    <testcase classname="controllers/documents deleteDocument should return an error when no metadata is returned for the given document" name="controllers/documents deleteDocument should return an error when no metadata is returned for the given document" time="0">
    </testcase>
    <testcase classname="controllers/documents deleteDocument should return an error when the document is not deleted" name="controllers/documents deleteDocument should return an error when the document is not deleted" time="0">
    </testcase>
    <testcase classname="controllers/documents deleteDocument should return an error when an error is thrown deleting the document" name="controllers/documents deleteDocument should return an error when an error is thrown deleting the document" time="0.001">
    </testcase>
  </testsuite>
</testsuites>