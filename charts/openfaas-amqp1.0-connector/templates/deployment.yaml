apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "amqp-connector.fullname" . }}
  labels:
    {{- include "amqp-connector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "amqp-connector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "amqp-connector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          env:
            - name: LOGGER_LEVEL
              value: {{ .Values.logger.level }}
            - name: AMQP_HOST
              value: {{ .Values.amqp.connection.host }}
            - name: AMQP_HOSTNAME
              value: {{ .Values.amqp.connection.hostname }}
            - name: AMQP_RECONNECT_LIMIT
              value: {{ .Values.amqp.connection.reconnectLimit | quote }}
            {{- if .Values.amqp.connection.existingPasswordSecret }}
            - name: AMQP_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.amqp.connection.existingPasswordSecret }}
            {{- else }}
            - name: AMQP_PASSWORD
              value: {{ .Values.amqp.connection.password }}
            {{- end }}
            - name: AMQP_PORT
              value: {{ .Values.amqp.connection.port | quote }}
            - name: AMQP_ATTEMPT_RECONNECTION
              value: {{ .Values.amqp.connection.reconnect | quote }}
            - name: AMQP_TRANSPORT
              value: {{ .Values.amqp.connection.transport }}
            {{- if .Values.amqp.connection.existingUsernameSecret }}
            - name: AMQP_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.amqp.connection.existingUsernameSecret }}
            {{- else }}
            - name: AMQP_USERNAME
              value: {{ .Values.amqp.connection.username }}
            {{- end }}
            - name: AMQP_DELIVERY_MAX_ATTEMPTS
              value: {{ .Values.amqp.delivery.maxAttempts | quote }}
            - name: AMQP_RECEIVER_AUTO_ACCEPT
              value: {{ .Values.amqp.receiver.autoAccept | quote }}
            - name: AMQP_QUEUE_NAME
              value: {{ .Values.amqp.receiver.source }}
            - name: AMQP_RESPONSE_REPLY_QUEUE
              value: {{ .Values.amqp.response.replyQueue }}
            - name: AMQP_RESPONSE_SEND_REPLY
              value: {{ .Values.amqp.response.sendReply | quote }}
            - name: AMQP_RECEIVER_FLOW_MANUAL
              value: {{ .Values.amqp.receiverFlow.manual | quote }}
            - name: AMQP_RECEIVER_FLOW_CONCURRENCY
              value: {{ .Values.amqp.receiverFlow.concurrentItems | quote }}
            - name: AMQP_RECEIVER_FLOW_POST_PROCESS_PAUSE
              value: {{ .Values.amqp.receiverFlow.postProcessPause | quote }}
            - name: HEALTH_PORT
              value: {{ .Values.health.port | quote }}
            - name: OPENFAAS_ASYNC
              value: {{ .Values.openfaas.async | quote }}
            - name: OPENFAAS_CALLBACK_URL
              value: {{ .Values.openfaas.callbackUrl }}
            - name: OPENFAAS_FUNCTION
              value: {{ .Values.openfaas.function }}
            - name: OPENFAAS_GATEWAY
              value: {{ .Values.openfaas.gateway }}
            {{- if .Values.openfaas.existingPasswordSecret }}
            - name: OPENFAAS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.openfaas.existingPasswordSecret }}
            {{- else }}
            - name: OPENFAAS_PASSWORD
              value: {{ .Values.openfaas.password }}
            {{- end }}
            {{- if .Values.openfaas.existingUsernameSecret }}
            - name: OPENFAAS_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Values.openfaas.existingUsernameSecret }}
            {{- else }}
            - name: OPENFAAS_USERNAME
              value: {{ .Values.openfaas.username }}
            {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
