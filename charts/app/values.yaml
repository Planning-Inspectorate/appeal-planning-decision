# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

appealsServiceApi:
  replicaCount: 1
  service:
    name: appeals-srv-api
    port: 3000
  image:
    repository: pinscommonukscontainers3887default.azurecr.io/appeals-service-api
    pullPolicy: Always
    tag: latest
  config:
    port: 3000

documentServiceApi:
  replicaCount: 1
  service:
    name: docs-srv-api
    port: 3001
  image:
    repository: pinscommonukscontainers3887default.azurecr.io/document-service-api
    pullPolicy: Always
    tag: latest
  config:
    db:
      name: document-service-api
    cron:
      schedule: "*/1 * * * *"
      successfulJobHistoryLimit: 3
    upload:
      maxSize: 50000000 # 50mb
      maxUploadAttempts: 3
      processQueryLimit: 5
      uploadContainerName: uploads
      uploadDir: /upload-dir
    port: 3000

formsWebApp:
  replicaCount: 1
  service:
    name: forms-web-app
    port: 9000
  image:
    repository: pinscommonukscontainers3887default.azurecr.io/forms-web-app
    pullPolicy: Always
    tag: latest
  config:
    port: 3000
    enableLimitedRouting: false
    googleAnalyticsId: ""
    upload:
      debug: true
      uploadDir: /upload-dir
      useTmpFiles: true

lpaQuestionnaireWebApp:
  replicaCount: 1
  service:
    name: lpa-questionnaire-web-app
    port: 9001
  image:
    repository: pinscommonukscontainers3887default.azurecr.io/lpa-questionnaire-web-app
    pullPolicy: Always
    tag: latest
  config:
    port: 3000
    googleAnalyticsId: ""
    upload:
      debug: true
      uploadDir: /upload-dir
      useTmpFiles: true

imagePullSecrets:
  - name: azure-docker-registry
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  host: chart.example.com
  secretName: ingress-tls-secret
  # The secret must be in the format for the nginx-ingress manual. If using
  # Azure Key Vault, store the secret in the vault as JSON
  # @link https://kubernetes.github.io/ingress-nginx/examples/auth/basic/
  httpBasic:
    enabled: false
    message: "Authentication Required"
    secret: ""
  clusterIssuer: letsencrypt
  redirects:
    - path: /health
      target: /display-404
    - path: /metrics
      target: /display-404

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

keyVault:
  name: key-vault-name
  secrets:
    - docs-blob-storage-connection-string
    - fwa-session-key
    - lpa-questionnaire-session-key
    - mongodb-connection-url
  multiValueSecrets: []
  envSpecific:
    secrets: []
    multiValueSecrets: []
