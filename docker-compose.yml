# Port ranges (by convention):
#  - API: 3000-3999 (3003 seems to be taken on some mac machines)
#  - Services: 4000-4999
#  - Mocks: 5000-5999
#  - Documentation: 7000-7999
#  - Websites: 9000-9999
#

version: '3.7'
services:
  clamav-rest-server:
    image: node:18-alpine
    profiles: ['all', 'appeals']
    ports:
      - 3100:3000
    depends_on:
      - clamav-server
    environment:
      CLAMAV_HOST: clamav-server
      CLAMAV_PORT: 3310
    working_dir: /opt/app
    volumes:
      # mount the root node_modules for shared packages
      - ./node_modules:/opt/node_modules
      - ./packages/common:/opt/app/node_modules/@pins/common # Replace the module to avoid symlink errors
      - ./packages/clamav-rest-server:/opt/app
    restart: on-failure
    command: npm run start:dev

  appeals-service-api:
    profiles: ['all', 'api', 'appeals', 'comment']
    image: node:18-alpine
    environment:
      APP_APPEALS_BASE_URL: http://forms-web-app:9003
      APP_LPA_QUESTIONNAIRE_BASE_URL: http://lpa-questionnaire-web-app:9001
      DOCS_API_PATH: /opt/app/api
      DOCUMENTS_SERVICE_API_URL: http://document-service-api:3000
      FEATURE_FLAGS_SETTING: 'ALL_ON'
      HORIZON_HAS_PUBLISHER_HOST: rabbitmq
      HORIZON_HAS_PUBLISHER_PASSWORD: admin
      HORIZON_HAS_PUBLISHER_PORT: 5672
      HORIZON_HAS_PUBLISHER_QUEUE: docker_queue
      HORIZON_HAS_PUBLISHER_USERNAME: admin
      LOGGER_LEVEL: 'debug'
      LOGGER_PRETTY_PRINT: 'true'
      LPA_DATA_PATH: /opt/app/data/lpa-list.csv
      LPA_TRIALIST_DATA_PATH: /opt/app/data/lpa-trialists.json
      MONGODB_AUTO_INDEX: 'true'
      MONGODB_DB_NAME: appeals-service-api
      MONGODB_URL: mongodb://mongodb:27017
      SERVER_SHOW_ERRORS: 'true'
      SRV_HORIZON_URL: http://mock-horizon:3000
      SRV_NOTIFY_BASE_URL: http://mock-notify:3000
      SRV_NOTIFY_SERVICE_ID: 'dummy-service-id-for-notify'
      SRV_NOTIFY_API_KEY: 'dummy-api-key-for-notify'
      SRV_NOTIFY_TEMPLATE_ID: 'dummy-template-id-for-notify'
      SRV_NOTIFY_APPEAL_SUBMISSION_RECEIVED_NOTIFICATION_EMAIL_TO_LPA_TEMPLATE_ID: '79488d5d-7efd-4273-a11f-e73f11d19676'
      SRV_NOTIFY_APPEAL_SUBMISSION_CONFIRMATION_EMAIL_TO_APPELLANT_TEMPLATE_ID: '72f71441-12bf-4455-afbc-c58f9c72bfbd'
      SRV_NOTIFY_START_EMAIL_TO_LPA_TEMPLATE_ID: 'c4701212-4b6a-4b55-801a-c86c7dbea54b'
      SRV_NOTIFY_LPA_DASHBOARD_INVITE_TEMPLATE_ID: '6726907e-d0f0-4e70-840e-196b38579de1'
      SRV_NOTIFY_EMAIL_REPLYTO_ID_START_EMAIL_TO_LPA: '937b4147-8420-42da-859d-d4a65bdf99bc'
      SRV_OS_PLACES_URL: http://mock-os-places:3000
      SRV_NOTIFY_FULL_APPEAL_RECEIVED_NOTIFICATION_EMAIL_TO_LPA_TEMPLATE_ID: 'e3cba5d9-8b97-4922-97f1-48ef303b9195'
      SRV_NOTIFY_FULL_APPEAL_CONFIRMATION_EMAIL_TO_APPELLANT_TEMPLATE_ID: '799a27da-b640-4852-a070-e83ff54401f0'
      SRV_NOTIFY_SAVE_AND_RETURN_CONTINUE_WITH_APPEAL_TEMPLATE_ID: 'b3651e9d-5cc3-4258-82b4-04ec2ba3d10e'
      SRV_NOTIFY_SAVE_AND_RETURN_ENTER_CODE_INTO_SERVICE_TEMPLATE_ID: 'e509eee7-f0bd-4d63-9203-d598ddd5b31e'
      SRV_NOTIFY_APPELLANT_LOGIN_CONFIRM_REGISTRATION_TEMPLATE_ID: 'f0781589-8df5-4717-ab87-1dc5c2d5a9de'
      SRV_NOTIFY_CONFIRM_EMAIL_TEMPLATE_ID: '4156c7ac-a235-4577-b976-44020bec4d5f'
      SRV_ADMIN_MONITORING_EMAIL: 'test@pins.gov.uk'
      SRV_NOTIFY_FAILURE_TO_UPLOAD_TO_HORIZON_TEMPLATE_ID: '49413491-90fd-4ce8-b061-e2f4758b636b'
      SQL_CONNECTION_STRING_ADMIN: 'sqlserver://mssql:1433;database=pins_front_office_development;user=sa;password=DockerDatabaseP@22word!;trustServerCertificate=true'
      SQL_CONNECTION_STRING: 'sqlserver://mssql:1433;database=pins_front_office_development;user=sa;password=DockerDatabaseP@22word!;trustServerCertificate=true'
      TASK_SUBMIT_TO_HORIZON_CRON_STRING: '*/10 * * * *'
      TASK_SUBMIT_TO_HORIZON_TRIGGER: 'false'
      PINS_FEATURE_FLAG_AZURE_CONNECTION_STRING:

    ports:
      - 3000:3000
      # node debugger
      # - 9229:9229
    working_dir: /opt/app
    depends_on:
      - appeals-service-api-data
      - document-service-api
      - mock-horizon
      - mock-notify
      - mongodb
      - mssql
    volumes:
      # mount the root node_modules for shared packages
      - ./node_modules:/opt/node_modules
      - ./packages/business-rules:/opt/app/node_modules/@pins/business-rules
      - ./packages/common:/opt/app/node_modules/@pins/common
      - ./packages/appeals-service-api:/opt/app
    command: npm run start:dev
    # if enabling debug, be sure to uncomment / expose the debug port above.
    # command: npm run start:dev:debug

  document-service-api: &document-service
    profiles: ['all', 'api', 'appeals']
    image: node:18-alpine
    environment:
      BLOB_STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://blob-storage:10000/devstoreaccount1;QueueEndpoint=http://blob-storage:10001/devstoreaccount1;
      STORAGE_CONTAINER_NAME: uploads
      FILE_MAX_SIZE_IN_BYTES: 15000000
      FILE_UPLOAD_PATH: /tmp/upload
      MONGODB_AUTO_INDEX: 'true'
      MONGODB_URL: mongodb://mongodb:27017/document-service-api
      SERVER_SHOW_ERRORS: 'true'
      PINS_FEATURE_FLAG_AZURE_CONNECTION_STRING:
    ports:
      - 3001:3000
    working_dir: /opt/app
    depends_on:
      - mongodb
    volumes:
      # mount the root node_modules for shared packages
      - ./node_modules:/opt/node_modules
      - ./packages/common:/opt/app/node_modules/@pins/common
      - ./packages/document-service-api:/opt/app
      - ./tmp/documents-upload:/tmp/upload
    command: npm run start:dev

  forms-web-app:
    profiles: ['all', 'appeals']
    image: node:18-alpine
    environment:
      CLAM_AV_HOST: http://clamav-rest-server:3000
      APPEALS_SERVICE_API_URL: http://appeals-service-api:3000
      DOCUMENTS_SERVICE_API_URL: http://document-service-api:3000
      FILE_UPLOAD_DEBUG: 'false'
      FILE_UPLOAD_MAX_FILE_SIZE_BYTES: 15000000
      FILE_UPLOAD_USE_TEMP_FILES: 'true'
      FILE_UPLOAD_TMP_PATH: '/tmp'
      GOOGLE_ANALYTICS_ID: G-TZBWMVPTHV
      SESSION_MONGODB_URL: mongodb://mongodb:27017/lpa-sessions
      SESSION_KEY: some_secure_key_goes_here
      # please override this locally if using not using localhost or ip address to browse the site in dev.
      SUBDOMAIN_OFFSET: 0
      USE_SECURE_SESSION_COOKIES: 'false'
      PDF_SERVICE_API_URL: 'http://pdf-service-api:3000'
      LOGGER_LEVEL: 'debug'
      PINS_FEATURE_FLAG_AZURE_CONNECTION_STRING:
      FEATURE_FLAGS_SETTING: 'ALL_ON'
      ALLOW_TESTING_OVERRIDES: 'true'
    ports:
      - 9003:3000
      # node debugger
      # - 9229:9229
    working_dir: /opt/app
    depends_on:
      - appeals-service-api
      - document-service-api
      - mongodb
      - clamav-rest-server
      - pdf-service-api
    volumes:
      # mount the root node_modules for shared packages
      - ./node_modules:/opt/node_modules
      - ./packages/business-rules:/opt/app/node_modules/@pins/business-rules
      - ./packages/common:/opt/app/node_modules/@pins/common
      - ./packages/forms-web-app:/opt/app
    command: npm run start:dev
    # if enabling debug, be sure to uncomment / expose the debug port above.
    # command: npm run start:dev:debug

  web-comment:
    profiles: ['all', 'comment']
    image: node:18-alpine
    environment:
      LOGGER_LEVEL: 'debug'
      APPEALS_SERVICE_API_URL: http://appeals-service-api:3000
    ports:
      - 9002:3000
      # node debugger
      # - 9229:9229
    working_dir: /opt/app
    depends_on:
      - appeals-service-api
    volumes:
      # mount the root node_modules for shared packages
      - ./node_modules:/opt/node_modules
      - ./packages/business-rules:/opt/app/node_modules/@pins/business-rules
      - ./packages/common:/opt/app/node_modules/@pins/common
      - ./packages/web-comment:/opt/app
    command: npm run start:dev
    # if enabling debug, be sure to uncomment / expose the debug port above.
    # command: npm run start:dev:debug

  # Populate the database with data - one instance per service
  appeals-service-api-data:
    profiles: ['all', 'api', 'appeals', 'comment']
    build:
      context: .
      dockerfile: ./dev/data/Dockerfile
    depends_on:
      - mongodb
    volumes:
      # mount the root node_modules for shared packages
      - ./node_modules:/opt/node_modules
      - ./dev/data:/opt/app
    environment:
      SOURCE_DIR: appeals-service-api
      MONGODB_URL: mongodb://mongodb:27017/appeals-service-api
    restart: on-failure
    command: npm start

  # Mocked services
  mock-horizon:
    profiles: ['all', 'api', 'appeals']
    # @todo generate from Swagger Docs
    build:
      context: .
      dockerfile: ./dev/mock-horizon/Dockerfile
    ports:
      - 5000:3000

  mock-notify:
    profiles: ['all', 'api', 'appeals', 'comment']
    build:
      context: .
      dockerfile: ./dev/mock-notify/Dockerfile
    ports:
      - 5001:3000

  docs-horizon:
    profiles: ['all', 'appeals']
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: /app/swagger.yaml
    depends_on:
      - mock-horizon
    volumes:
      - ./docs/swagger/horizon/create_case_openapi.yaml:/app/swagger.yaml
    ports:
      - 7000:8080

  # Third-party services
  blob-storage:
    profiles: ['all', 'appeals', 'comment']
    image: mcr.microsoft.com/azure-storage/azurite:3.26.0
    ports:
      - 4002:10000
      - 4003:10001
    volumes:
      - ./tmp/blob-storage:/data

  mongodb:
    profiles: ['all', 'api', 'appeals', 'comment']
    image: mongo:3.6.21
    ports:
      - 4000:27017
    # deploy:
    #   resources:
    #     limits:
    #       memory: 250M

  mssql:
    profiles: ['all', 'api', 'appeals', 'comment']
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: appeals-mssql
    cap_add: ['SYS_PTRACE']
    user: root
    environment:
      - 'ACCEPT_EULA=1'
      - 'MSSQL_SA_PASSWORD=DockerDatabaseP@22word!'
    ports:
      - 1433:1433
    hostname: mssql
    volumes:
      - ./dev/mssql.conf:/var/opt/mssql/mssql.conf
      - ./tmp/mssql-data:/var/opt/mssql/data

  # do people use this?
  # mongoExpress:
  #   image: mongo-express
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=mongodb
  #   depends_on:
  #     - mongodb
  #   ports:
  #     - '5003:8081'
