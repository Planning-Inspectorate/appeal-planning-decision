openapi: 3.0.3
info:
  title: Appeals Service API Documentation
  description:
    API to <ul><li>create, retrieve and modify planning appeals and </li><li>retrieve local planning authorities.</li></ul>
  version: 1.0.1
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:3000/'
paths:
  '/api/v1/appeals':
    post:
      summary: Creates a new appeal
      description: A newly created Appeal will have a DRAFT state and all subsections will have NOT STARTED state. The id will be a uuid.
      tags:
        - Appeals
      requestBody:
        description: User provided information that is considered immutable.
        content:
          application/json:
            schema:
              properties:
                lpaCode:
                  type: string
                  example: 'E60000281'
                  description: local planning authority code
                decisionDate:
                  type: string
                  format: date
                  description: date that the original planning application was decided
        required: true
      responses:
        '201':
          description: Returns a newly created appeal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
        '400':
          description: Returns a collection of errors generated by the invalid input
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Error'
  '/api/v1/appeals/{id}':
    get:
      summary: Returns an existing appeal
      description: The Appeal includes the state of all subsections.
      tags:
        - Appeals
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier
      responses:
        '200':
          description: Returns an appeal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
        '404':
          description: The appeal could not be found
    put:
      summary: Modifies an existing appeal
      description: The provided Appeal will replace the existing one if the proposed update complies with all business validation rules. Nothing is changed if there are any validation failures and the errors will be listed in the response.
      tags:
        - Appeals
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier
      requestBody:
        description: Proposed new state for the Appeal.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appeal'
        required: true
      responses:
        '200':
          description: Returns the updated appeal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appeal'
        '400':
          description: Returns a collection of errors generated by the invalid input
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Error'
        '404':
          description: The appeal could not be found
  '/api/v1/local-planning-authorities':
    get:
      summary: Returns all local planning authorties
      description: The collection of local planning authorities includes name and unique identification code for each authority.
      tags:
        - Local Planning Authorities
      responses:
        '200':
          description: Returns all local planning authorities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalPlanningAuthority'
  '/api/v1/local-planning-authorities/{id}':
    get:
      summary: Returns a local planning authoritiy
      description: The local planning authority includes name and unique identification code.
      tags:
        - Local Planning Authorities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: 'E60000281'
          description: Local planning authority unique identification code
      responses:
        '200':
          description: Returns a local planning authority
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalPlanningAuthority'
        '404':
          description: The local authority could not be found
components:
  schemas:
    AboutYouSection:
      type: object
      properties:
        yourDetails:
          $ref: '#/components/schemas/YourDetails'
      description: Section that includes information about the applicant and who they may repesent
    Appeal:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lpaCode:
          type: string
          example: 'E60000281'
        decisionDate:
          type: string
          format: date
        state:
          $ref: '#/components/schemas/AppealState'
        aboutYouSection:
          $ref: '#/components/schemas/AboutYouSection'
        requiredDocumentsSection:
          $ref: '#/components/schemas/RequiredDocumentsSection'
        yourAppealSection:
          $ref: '#/components/schemas/YourAppealSection'
        appealSiteSection:
          $ref: '#/components/schemas/AppealSiteSection'
        sectionStates:
          $ref: '#/components/schemas/SectionStates'
      description: All of the data and state information for an appeal
    AppealSiteSection:
      type: object
      properties:
        siteAddress:
          $ref: '#/components/schemas/SiteAddress'
        siteOwnership:
          $ref: '#/components/schemas/SiteOwnership'
        siteAccess:
          $ref: '#/components/schemas/SiteAccess'
        healthAndSafety:
          $ref: '#/components/schemas/HealthAndSafety'
      description: Section that includes information about the appeal site address, access, ownership and any health and safety issues
    AppealState:
      type: string
      enum:
        - 'DRAFT'
        - 'SUBMITTED'
    AppealStatement:
      type: object
      properties:
        uploadedFile:
          $ref: '#/components/schemas/UploadedFile'
        hasSensitiveInformation:
          type: boolean
    ApplicationNumber:
      type: string
      example: "S/35552"
    DecisionLetter:
      type: object
      properties:
        uploadedFile:
          $ref: '#/components/schemas/UploadedFile'
    Error:
      type: object
      properties:
        code:
          type: number
          example: 1234
        message:
          type: string
          example: "Appeal cannot become SUBMITTED if any subsections are not COMPLETED"
    HealthAndSafety:
      type: object
      properties:
        hasIssues:
          type: boolean
        healthAndAsfetyIssues:
          type: string
          example: 'There is a big dog in the field'
    LocalPlanningAuthority:
      type: object
      properties:
        id:
          type: string
          example: 'E60000281'
        name:
          type: string
          example: 'Adur LPA'
        inTrial:
          type: boolean
        england:
          type: boolean
        wales:
          type: boolean
          example: false
    OtherAppeals:
      type: object
      properties:
        hasOtherAppeal:
          type: boolean
        otherAppealRefNumber:
          type: string
    OtherDocuments:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/UploadedFile'
    OriginalApplication:
      type: object
      properties:
        uploadedFile:
          $ref: '#/components/schemas/UploadedFile'
    RequiredDocumentsSection:
      type: object
      properties:
        applicationNumber:
          $ref: '#/components/schemas/ApplicationNumber'
        originalApplication:
          $ref: '#/components/schemas/OriginalApplication'
        decisionLetter:
          $ref: '#/components/schemas/DecisionLetter'
      description: Section that includes required documents and reference number relating to original apllication
    SectionState:
      type: string
      enum:
        - 'NOT STARTED'
        - 'IN PROGRESS'
        - 'COMPLETED'
      description: Each subsection begins as NOT STARTED and can progress to IN PROGRESS and COMPLETED
    SectionStates:
      type: object
      properties:
        aboutYouSection:
          properties:
            yourDetails:
              $ref: '#/components/schemas/SectionState'
        requiredDocumentsSection:
          properties:
            applicationNumber:
              $ref: '#/components/schemas/SectionState'
            originalApplication:
              $ref: '#/components/schemas/SectionState'
            decisionletter:
              $ref: '#/components/schemas/SectionState'
        yourAppealSection:
          properties:
            appealStatement:
              $ref: '#/components/schemas/SectionState'
            otherDocuments:
              $ref: '#/components/schemas/SectionState'
            otherAppeals:
              $ref: '#/components/schemas/SectionState'
        appealSiteSection:
          properties:
            siteAcces:
              $ref: '#/components/schemas/SectionState'
            siteOwnership:
              $ref: '#/components/schemas/SectionState'
            healthAndSafety:
              $ref: '#/components/schemas/SectionState'
      description: This includes the state of each subsection to track completion progress
    SiteAccess:
      type: object
      properties:
        canInspectorSeeWholeSiteFromPublicRoad:
          type: boolean
        howIsSiteAccessRestricted:
          type: string
    SiteAddress:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
    SiteOwnership:
      type: object
      properties:
        ownsWholeSite:
          type: boolean
        haveOtherOwnersBeenTold:
          type: boolean
    UploadedFile:
      type: object
      properties:
        name:
          type: string
          example: 'my_uploaded_file.pdf'
        id:
          type: string
          format: uuid
      description: The name may not uniquely idientify the uploaded file but the id will
    YourAppealSection:
      type: object
      properties:
        appealStatement:
          $ref: '#/components/schemas/AppealStatement'
        otherDocuments:
          $ref: '#/components/schemas/OtherDocuments'
        otherAppeals:
          $ref: '#/components/schemas/OtherAppeals'
      description: Section that includes grounds for the appeal, supporting documents and references to any related appeals
    YourDetails:
      type: object
      properties:
        isOriginalApplicant:
          type: boolean
          example: true
        name:
          type: string
          example: "Ms Alison Khan"
        email:
          type: string
          example: "akhan123@email.com"
        appealingOnBehalfOf:
          type: string
          example: "Mr Josh Evans"
      description: Your Details Subsection
