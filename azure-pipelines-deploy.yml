# packages with infrequent changes do not auto-deploy to dev/test to speed up pipeline
parameters:
  - name: deployAppealsApi
    displayName: Deploy Appeals Service API
    type: boolean
    default: true
  - name: deployAuthServer
    displayName: Deploy Auth Server
    type: boolean
    default: true
  - name: deployDocumentsApi
    displayName: Deploy Documents Service API
    type: boolean
    default: true
  - name: deployIntegrationFunctions
    displayName: Deploy Integration Functions
    type: boolean
    default: true
  - name: deployPdfApi
    displayName: Deploy PDF Service API
    type: boolean
    default: false
  - name: deployWeb
    displayName: Deploy Web Appeal
    type: boolean
    default: true
  - name: region
    displayName: Region
    type: string
    values:
      - UK West
      - UK South
    default: UK West
  - name: schemaMigration
    displayName: Run SQL Database Migration
    type: boolean
    default: true
  - name: seedData
    displayName: Add static (required) data to SQL database
    type: boolean
    default: false

pr: none
trigger: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.18.2
  pipelines:
    - pipeline: build
      source: Appeals Service Build
      trigger:
        branches:
          include:
            - main

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    automaticDeployments:
      environments:
        - name: Dev
        - name: Test
          dependsOn:
            - Dev
    environments:
      - name: Dev
      - name: Test
        dependsOn:
          - Dev
      - name: Training
        dependsOn:
          - Test
      - name: Prod
        dependsOn:
          - Test
    deploymentStages:
      - name: Deploy Applications
        deploymentJobs:
          - name: Migrate
            condition: ${{ or(eq(parameters.schemaMigration, true), eq(parameters.seedData, true)) }}
            steps:
              - checkout: self
              - template: ../steps/azure_get_secrets.yml
                parameters:
                  secrets:
                    - name: appeals-sql-server-connection-string-admin
                      variable: SQL_CONNECTION_STRING_ADMIN
                    - name: appeals-sql-server-connection-string-app
                      variable: SQL_CONNECTION_STRING
              - template: ../steps/node_script.yml
                parameters:
                  nodeVersion: 20
                  script: npm ci --workspace=@pins/database
                  workingDirectory: $(Build.Repository.LocalPath)
              - ${{ if eq(parameters.schemaMigration, true) }}:
                  - template: ../steps/node_script.yml
                    parameters:
                      nodeVersion: 20
                      environmentVariables:
                        SQL_CONNECTION_STRING_ADMIN: $(SQL_CONNECTION_STRING_ADMIN)
                      script: npm run migrate:prod
                      workingDirectory: $(Build.Repository.LocalPath)/packages/database
              - ${{ if eq(parameters.seedData, true) }}:
                  - template: ../steps/node_script.yml
                    parameters:
                      nodeVersion: 20
                      environmentVariables:
                        SQL_CONNECTION_STRING: $(SQL_CONNECTION_STRING)
                      script: npm run seed:prod
                      workingDirectory: $(Build.Repository.LocalPath)/packages/database
          - name: Deploy Appeals API
            dependsOn:
              - Migrate
            condition: eq(${{ parameters.deployAppealsApi }}, 'true')
            steps:
              - checkout: self
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-appeals-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/appeals-service-api
              - script: |
                    echo "Verifying API Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                    bash ./scripts/verify_commit_hash.sh "API" "https://pins-app-appeals-service-appeals-api-$(ENVIRONMENT)-$(REGION_SHORT)-001.azurewebsites.net/health" "$(resources.pipeline.build.sourceCommit)" 5
                displayName: API Verify Version
                failOnStderr: true
                continueOnError: false
                workingDirectory: $(Build.Repository.LocalPath)
          - name: Deploy Auth Server
            dependsOn:
              - Migrate
            condition: eq(${{ parameters.deployAuthServer }}, 'true')
            steps:
              - checkout: self
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-auth-server-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/auth-server
              - script: |
                    echo "Verifying Auth Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                    bash ./scripts/verify_commit_hash.sh "API" "https://pins-app-appeals-service-auth-server-$(ENVIRONMENT)-$(REGION_SHORT)-001.azurewebsites.net/health" "$(resources.pipeline.build.sourceCommit)" 5
                displayName: Auth Verify Version
                failOnStderr: true
                continueOnError: false
                workingDirectory: $(Build.Repository.LocalPath)
          - name: Deploy Documents API
            dependsOn:
              - Migrate
            condition: eq(${{ parameters.deployDocumentsApi }}, 'true')
            steps:
              - checkout: self
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-documents-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/documents-api
              - script: |
                    echo "Verifying Documents Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                    bash ./scripts/verify_commit_hash.sh "API" "https://pins-app-appeals-service-documents-api-$(ENVIRONMENT)-$(REGION_SHORT)-001.azurewebsites.net/health" "$(resources.pipeline.build.sourceCommit)" 5
                displayName: Documents Verify Version
                failOnStderr: true
                continueOnError: false
                workingDirectory: $(Build.Repository.LocalPath)
          - name: Deploy Integration Functions
            dependsOn:
              - Migrate
            condition: eq(${{ parameters.deployIntegrationFunctions }}, 'true')
            steps:
              - download: build
                artifact: integration-functions
                displayName: Download integration-functions
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-appeals-fo-integration-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
                  workingDirectory: $(Pipeline.Workspace)/build/integration-functions
          - name: Deploy PDF API
            dependsOn:
              - Migrate
            condition: eq(${{ parameters.deployPdfApi }}, 'true')
            steps:
              - checkout: self
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-pdf-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/pdf-service-api
              - script: |
                    echo "Verifying PDF Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                    bash ./scripts/verify_commit_hash.sh "API" "https://pins-app-appeals-service-pdf-api-$(ENVIRONMENT)-$(REGION_SHORT)-001.azurewebsites.net/health" "$(resources.pipeline.build.sourceCommit)" 10
                    # large image, slow to update 
                displayName: PDF Verify Version
                failOnStderr: true
                continueOnError: false
                workingDirectory: $(Build.Repository.LocalPath)
          - name: Deploy Web
            dependsOn:
              - Migrate
            condition: eq(${{ parameters.deployWeb }}, 'true')
            steps:
              - checkout: self
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-appeals-wfe-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/forms-web-app
              - script: |
                    echo "Verifying Web Version (using git hash $(resources.pipeline.build.sourceCommit))..."
                    bash ./scripts/verify_commit_hash.sh "API" "$(WEB_URL)/health" "$(resources.pipeline.build.sourceCommit)" 5
                displayName: Web Verify Version
                failOnStderr: true
                continueOnError: false
                workingDirectory: $(Build.Repository.LocalPath)
    globalVariables:
      - template: azure-pipelines-variables.yml@self
