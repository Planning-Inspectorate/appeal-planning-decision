parameters:
  - name: deployAppealsApi
    displayName: Deploy Appeals Service API
    type: boolean
    default: true
  - name: deployClamAv
    displayName: Deploy ClamAV API
    type: boolean
    default: true
  - name: deployDocumentsApi
    displayName: Deploy Documents Service API
    type: boolean
    default: true
  - name: deployIntegrationFunctions
    displayName: Deploy Integration Functions
    type: boolean
    default: true
  - name: deployPdfApi
    displayName: Deploy PDF Service API
    type: boolean
    default: true
  - name: deployWeb
    displayName: Deploy Web
    type: boolean
    default: true
  - name: region
    displayName: Region
    type: string
    values:
      - UK West
      - UK South
    default: UK West
  - name: schemaMigration
    displayName: Run Database Migration
    type: boolean
    default: true
  - name: seedData
    displayName: Add static (required) data to database
    type: boolean
    default: false

pr: none
trigger: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.5.0
  pipelines:
    - pipeline: build
      source: Appeals Service Build
      trigger:
        branches:
          include:
            - main

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    automaticDeployments:
      environments:
        - name: Dev
        - name: Test
          dependsOn:
            - Dev
    deploymentStages:
      - name: Deploy Applications
        deploymentJobs:
          - name: Deploy Appeals API
            condition: eq(${{ parameters.deployAppealsApi }}, 'true')
            steps:
              - ${{ if or(eq(parameters.schemaMigration, true), eq(parameters.seedData, true)) }}:
                  - checkout: self
                  - template: ../steps/azure_get_secrets.yml
                    parameters:
                      secrets:
                        - name: appeals-sql-server-connection-string-admin
                          variable: DATABASE_URL
                  - ${{ if eq(parameters.schemaMigration, true) }}:
                      - template: ../steps/node_script.yml
                        parameters:
                          nodeVersion: 18
                          environmentVariables:
                            DATABASE_URL: $(DATABASE_URL)
                          script: npm run db:migrate:prod
                          workingDirectory: $(Build.Repository.LocalPath)/packages/appeals-service-api
                  - ${{ if eq(parameters.seedData, true) }}:
                      - template: ../steps/node_script.yml
                        parameters:
                          nodeVersion: 18
                          environmentVariables:
                            DATABASE_URL: $(DATABASE_URL)
                          script: npm run db:seed:prod
                          workingDirectory: $(Build.Repository.LocalPath)/packages/appeals-service-api
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-appeals-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/appeals-service-api
          - name: Deploy ClamAV API
            condition: eq(${{ parameters.deployClamAv }}, 'true')
            steps:
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-clamav-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/clamav-api
          - name: Deploy Documents API
            condition: eq(${{ parameters.deployDocumentsApi }}, 'true')
            steps:
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-documents-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/documents-api
          - name: Deploy Integration Functions
            artifact:
              name: integration-functions
              sourcePipeline: Appeals Service Build
            condition: eq(${{ parameters.deployIntegrationFunctions }}, 'true')
            steps:
              - template: ../steps/function_app_deploy.yml
                parameters:
                  appName: pins-func-appeals-fo-integration-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  resourceGroup: $(resourceGroup)
          - name: Deploy PDF API
            condition: eq(${{ parameters.deployPdfApi }}, 'true')
            steps:
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-pdf-api-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/pdf-service-api
          - name: Deploy Web
            condition: eq(${{ parameters.deployWeb }}, 'true')
            steps:
              - template: ../steps/azure_web_app_deploy.yml
                parameters:
                  appName: pins-app-appeals-service-appeals-wfe-$(ENVIRONMENT)-$(REGION_SHORT)-001
                  appResourceGroup: $(resourceGroup)
                  azurecrName: $(azurecrName)
                  repository: appeal-planning-decision/forms-web-app
    globalVariables:
      - template: azure-pipelines-variables.yml@self
