trigger:
  branches:
    include:
      - main

pr: none

parameters:
  - name: runValidation
    displayName: Run linting and tests
    type: boolean
    default: true
  - name: buildAppealsApi
    displayName: Build Appeals Service API
    type: boolean
    default: true
  - name: buildAuthServer
    displayName: Build Auth Server
    type: boolean
    default: false
  - name: buildDocumentsApi
    displayName: Build Documents Service API
    type: boolean
    default: false
  - name: buildIntegrationFunctions
    displayName: Build Integration Functions
    type: boolean
    default: true
  - name: buildPdfApi
    displayName: Build PDF Service API
    type: boolean
    default: false
  - name: buildWeb
    displayName: Build Web Appeal
    type: boolean
    default: true

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.20.0

extends:
  template: stages/wrapper_ci.yml@templates
  parameters:
    globalVariables:
      - template: azure-pipelines-variables.yml@self
    validationJobs:
      - name: Run Linting & Tests
        condition: ${{ eq(parameters.runValidation, true) }}
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm ci
          - template: ../steps/node_script.yml
            parameters:
              condition: succeededOrFailed()
              script: npm run lint
              nodeVersion: 22
          - template: ../steps/node_script.yml
            parameters:
              condition: succeededOrFailed()
              script: npm run test
              nodeVersion: 22
          - template: ../steps/check_changed_files.yml
            parameters:
              pathFilters:
                - name: appeals-api
                  path: packages/appeals-service-api
                - name: auth-server
                  path: packages/auth-server
                - name: business-rules
                  path: packages/business-rules
                - name: common
                  path: packages/common
                - name: database
                  path: packages/database
                - name: documents-api
                  path: packages/document-service-api
                - name: integration-functions
                  path: packages/integration-functions
                - name: pdf-api
                  path: packages/pdf-service-api
                - name: web
                  path: packages/forms-web-app
              stepName: check_files
      - name: Build Appeals API
        condition: >-
          and(
            ne(variables['Agent.JobStatus'], 'Failed'),
            or(
            and(
              eq(variables['Build.Reason'], 'Manual'),
              eq(${{ parameters.buildAppealsApi }}, 'true')
            ),
            and(
              ne(variables['Build.Reason'], 'Manual'),
              or(
                eq(variables['Build.SourceBranchName'], 'main'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.appeals-api'], 'true'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.business-rules'], 'true'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.common'], 'true'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.database'], 'true')
              )
            )
          )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/packages/appeals-service-api/Dockerfile
              repository: appeal-planning-decision/appeals-service-api
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build Auth Server
        condition: >-
          and(
            ne(variables['Agent.JobStatus'], 'Failed'),
            or(
            and(
              eq(variables['Build.Reason'], 'Manual'),
              eq(${{ parameters.buildAuthServer }}, 'true')
            ),
            and(
              ne(variables['Build.Reason'], 'Manual'),
              or(
                eq(variables['Build.SourceBranchName'], 'main'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.auth-server'], 'true'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.common'], 'true'),
                eq(dependencies.run_linting_and_tests.outputs['check_files.database'], 'true')
              )
            )
          )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/packages/auth-server/Dockerfile
              repository: appeal-planning-decision/auth-server
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build Documents API
        condition: >-
          and(
            ne(variables['Agent.JobStatus'], 'Failed'),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildDocumentsApi }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.documents-api'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.common'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.SourcesDirectory)/packages/document-service-api/Dockerfile
              repository: appeal-planning-decision/documents-api
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build Integration Functions
        condition: >-
          and(
            ne(variables['Agent.JobStatus'], 'Failed'),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildIntegrationFunctions }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.integration-functions'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm ci --omit=dev --workspace=integration-functions --workspace=@pins/common
              workingDirectory: $(Build.Repository.LocalPath)
          - script: |
              source ~/.bashrc
              # ensure there is a @pins/common folder
              mkdir -p $(Build.Repository.LocalPath)/packages/integration-functions/node_modules/@pins/common
              # copy root node_modules to function (but don't overwrite)
              rsync -a -r --ignore-existing $(Build.Repository.LocalPath)/node_modules/ $(Build.Repository.LocalPath)/packages/integration-functions/node_modules/
              # copy common package to @pins/common folder
              cp -r $(Build.Repository.LocalPath)/packages/common/* $(Build.Repository.LocalPath)/packages/integration-functions/node_modules/@pins/common/
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(Build.Repository.LocalPath)/packages/integration-functions
              includeRootFolder: false
              archiveFile: $(System.DefaultWorkingDirectory)/functions.zip
          - publish: $(System.DefaultWorkingDirectory)/functions.zip
            artifact: integration-functions
            displayName: Publish Functions Artifact
      - name: Build PDF Service
        condition: >-
          and(
            ne(variables['Agent.JobStatus'], 'Failed'),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildPdfApi }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.pdf-api'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.Repository.LocalPath)/packages/pdf-service-api/Dockerfile
              repository: appeal-planning-decision/pdf-service-api
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
      - name: Build Web
        condition: >-
          and(
            ne(variables['Agent.JobStatus'], 'Failed'),
            or(
              and(
                eq(variables['Build.Reason'], 'Manual'),
                eq(${{ parameters.buildWeb }}, 'true')
              ),
              and(
                ne(variables['Build.Reason'], 'Manual'),
                or(
                  eq(variables['Build.SourceBranchName'], 'main'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.business-rules'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.common'], 'true'),
                  eq(dependencies.run_linting_and_tests.outputs['check_files.web'], 'true')
                )
              )
            )
          )
        dependsOn:
          - Run Linting & Tests
        steps:
          - template: ../steps/azure_web_app_docker_build_push.yml@templates
            parameters:
              azurecrName: $(azurecrName)
              dockerfilePath: $(Build.Repository.LocalPath)/packages/forms-web-app/Dockerfile
              repository: appeal-planning-decision/forms-web-app
              buildArgs:
                - GIT_SHA=$(Build.SourceVersion)
