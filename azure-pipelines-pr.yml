# any PR
pr:
  branches:
    include:
      - '*'
      
# trigger for merge queue branches (PR has been approved, pipeline has already run as per above trigger)
trigger:
  branches:
    include:
      - gh-readonly-queue/*

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.20.0

extends:
  template: stages/wrapper_ci.yml@templates
  parameters:
    globalVariables:
      - template: azure-pipelines-variables.yml@self
    # Checking against main 50 commits back, this might not catch everything
    gitFetchDepth: 50
    validationJobs:
      - name: Check Changes
        steps:
          - template: ../steps/check_changed_files.yml
            parameters:
              pathFilters:
                - name: source_code
                  path: packages
                - name: package_lock
                  path: package-lock.json
                - name: package_json
                  path: package.json
              stepName: check_files
      - name: Run Linting & Tests
        dependsOn:
          - Check Changes
        condition: >-
          and(
            succeeded(),
            or(
              eq(dependencies.check_changes.outputs['check_files.source_code'], 'true'),
              eq(dependencies.check_changes.outputs['check_files.package_lock'], 'true'),
              eq(dependencies.check_changes.outputs['check_files.package_json'], 'true')
            )            
          )
        variables:
        - name: test-script
          ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/gh-readonly-queue') }}:
            value: npm run test
          ${{ else }}:
            value: npm run test-cov
        steps:
          - template: ../steps/node_script.yml
            parameters:
              nodeVersion: 22
              script: npm ci
          - template: ../steps/node_script.yml
            parameters:
              condition: succeededOrFailed()
              script: npm run lint
              nodeVersion: 22
          - template: ../steps/node_script.yml
            parameters:
              condition: succeededOrFailed()
              script: $(test-script)
              nodeVersion: 22