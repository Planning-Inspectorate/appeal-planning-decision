# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - feature/as-3074-appeal-service-api-pipeline

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  tag: '$(Build.BuildId)'
  appealsApiDockerfilePath: '$(Build.SourcesDirectory)/packages/appeals-service-api/Dockerfile'
  documentServiceApiDockerfilePath: '$(Build.SourcesDirectory)/packages/document-service-api/Dockerfile'
  appealsReplyApiDockerfilePath: '$(Build.SourcesDirectory)/packages/appeal-reply-service-api/Dockerfile'
  pdfServiceApiDockerfilePath: '$(Build.SourcesDirectory)/packages/pdf-service-api/Dockerfile'
  formswebappServiceApiDockerfilePath: '$(Build.SourcesDirectory)/packages/forms-web-app/Dockerfile'
  lpaServiceApiDockerfilePath: '$(Build.SourcesDirectory)/packages/lpa-questionnaire-web-app/Dockerfile'
  commonsDockerfilePath: '$(Build.SourcesDirectory)/packages/common/Dockerfile' 
  imageRepository: 'planninginspectorateappealplanningdecision'
  containerRegistry: 'pinscommonukscontainers3887default.azurecr.io'
  dockerRegistryServiceConnection: 'appeals-service-api-registry-connection'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build_commons 
    displayName: Build and push commons stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(commonsDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)-commons-image
  
  - stage: Build_Forms_Webapp_API
    displayName: Build and forms webapp Service API stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
         - task: Docker@2
           displayName: Build and push an image to container registry
           inputs:
             command: buildAndPush
             repository: $(imageRepository)
             dockerfile: $(formswebappServiceApiDockerfilePath)
             containerRegistry: $(dockerRegistryServiceConnection)
             tags: |
               $(tag)-forms-webapp-service-api                           
   

  - stage: Build_Lpa_questionaire_Service_API
    displayName: Build and push LPA Questionnaire Service API stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(lpaServiceApiDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)-Lpa-quesionaire-service-api                           
  

  - stage: Build_Pdf_Service_API
    displayName: Build and push Pdf Service API stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(pdfServiceApiDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)-Pdf-service-api                           
  
  - stage: Build_Appeals_Reply_Service_API
    displayName: Build and push Appeals Reply Service API
    jobs: 
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to the container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(appealsReplyApiDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)-appeal-reply-service-api 

  - stage: Build_Document_Service_API
    displayName: Build and push Document Service API stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(documentServiceApiDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)-document-service-api                           
  
  - stage: Build_Appeals_Service_API
    displayName: Build and push Appeals Service API stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(appealsApiDockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)-appeal-service-api




  