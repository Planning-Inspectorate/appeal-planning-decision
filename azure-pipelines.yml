# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- feature/as-3074-appeal-service-api-pipeline

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerfilePath: '$(Build.SourcesDirectory)/packages/appeals-service-api/Dockerfile'
  # azureSubscriptionEndpoint: PINS ACPHZN Prod (cbd9712b-34c8-4c94-9633-37ffc0f54f9d)
  # imageName: appealServiceApiImage
  imageRepository: pinsportalinhouse
  containerRegistry: 'pinsportalcontainerregistry.azurecr.io'
  dockerRegistryServiceConnection: '2dd2dc19-2d33-4627-ba3b-4b5773617eee'
  imagePullSecret: 'pinsportalcontainerregistry0d39-auth'
  vmImageName: 'node:14-alpine'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - upload: manifests
      artifact: manifests


      
    # - task: Docker@2
    #   displayName: Push
    #   inputs:
    #     command: push
    #     repository: $(imageName)
    #     containerRegistry: $(imageRepository)
    #     tags: |
    #       appeal-service-api

# - stage: Deploy
#   displayName: Deploy WebApp
#   jobs:
#   - job: Deploy
#     displayName: Deploy
#     steps:
#     # - task: AzureWebApp@1
#     #   inputs:
#     #     appType: webApp
#     #     azureSubscription: 'PINS ACPHZN Prod'
#     #     appName: 'appeal-service-api'
#     #     package: '$(System.DefaultWorkingDirectory)'
#     #     customWebConfig: '-Handler iisnode -NodeStartFile server.js -appType node'
#     - task: AzureRMWebAppDeployment@4
#       displayName: Appeals Service API Deploy
#       inputs:
#         appType: webAppContainer
#         ConnectedServiceName: $(azureSubscriptionEndpoint)
#         WebAppName: $(WebAppName)
#         DockerNamespace: $(DockerNamespace)
#         DockerRepository: $(DockerRepository)
#         DockerImageTag: $(Build.BuildId)