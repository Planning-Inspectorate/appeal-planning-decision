# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- feature/as-3074-appeal-service-api-pipeline

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerfilePath: '$(Build.SourcesDirectory)/packages/appeals-service-api/Dockerfile'
  azureSubscriptionEndpoint: PINS ODTDEV (38602df9-8f79-41d1-a971-50c7672ba6f1)
  # imageName: appealServiceApiImage
  imageRepository: pinsportalinhouse
  containerRegistry: 'pinsportalcontainerregistry.azurecr.io'
  dockerRegistryServiceConnection: 'appeals-service-api-registry-connection'
  imagePullSecret: 'pinsportalcontainerregistry0d39-auth'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy WebApp
  jobs:
  - job: Deploy
    displayName: Deploy
    steps:
    - task: AzureWebApp@1
      inputs:
        appType: webApp
        azureSubscription: $(azureSubscriptionEndpoint)
        appName: 'appeal-service-api'
        package: '$(System.DefaultWorkingDirectory)'
        customWebConfig: '-Handler iisnode -NodeStartFile server.js -appType node'
#     - task: AzureRMWebAppDeployment@4
#       displayName: Appeals Service API Deploy
#       inputs:
#         appType: webAppContainer
#         ConnectedServiceName: $(azureSubscriptionEndpoint)
#         WebAppName: $(WebAppName)
#         DockerNamespace: $(DockerNamespace)
#         DockerRepository: $(DockerRepository)
#         DockerImageTag: $(Build.BuildId)