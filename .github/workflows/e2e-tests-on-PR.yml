name: Cypress

env:
  CYPRESS_VIDEOS: ./e2e-tests/cypress/videos
  CYPRESS_SCREENSHOTS: ./e2e-tests/cypress/screenshots
  CYPRESS_REPORTS: ./e2e-tests/cypress/cucumber-report
  LPA_CYPRESS_VIDEOS: ./lpa-submissions-e2e-tests/cypress/videos
  LPA_CYPRESS_SCREENSHOTS: ./lpa-submissions-e2e-tests/cypress/screenshots
  LPA_CYPRESS_REPORTS: ./lpa-submissions-e2e-tests/cypress/cucumber-report

on:
  pull_request:
    branches:
      - master
      - feature/*

jobs:
  context:
    name: "Build ID"
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}
    steps:
      - name: 'uuid'
        id: uuid
        run: echo "::set-output name=value::$GITHUB_SHA-$(date +"%s")"

  cypress-ACP:
    name: "Cypress- ACP mode"
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache central NPM modules
        uses: actions/cache@v2
        env:
          cache-name: cache-acp-central-npm-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: acp-${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            acp-${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        env:
          cache-name: cache-acp-cypress-binary
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.cache/Cypress
          key: acp-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            acp-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      - name: Cache local node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-acp-local-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: acp-${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            acp-${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: Install the world
        run: make install

      - name: Start the world with ACP integration
        run: |
          export SERVER_LIMITED_ROUTING_ENABLED=true
          docker-compose up -d
      - name: Run the tests with ACP integration
        run: npm run test:e2e:acp

      - name: Post-process results with ACP integration
        if: ${{ always() }}
        run: npm run test:e2e:postprocess

      - name: Archive results with ACP integration
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: results-acp
          path: ${{ env.CYPRESS_REPORTS }}

      - name: Archive videos - with ACP integration
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: videos-acp
          path: ${{ env.CYPRESS_VIDEOS }}

      - name: Archive screenshots - with ACP integration
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots-acp
          path: ${{ env.CYPRESS_SCREENSHOTS }}

  cypress-LPA:
    name: "Cypress- LPA questionnaire"
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache central NPM modules
        uses: actions/cache@v2
        env:
          cache-name: cache-lpa-central-npm-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: lpa-${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            lpa-${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        env:
          cache-name: cache-lpa-cypress-binary
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.cache/Cypress
          key: lpa-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            lpa-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      - name: Cache local node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-lpa-local-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: lpa-${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            lpa-${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: Install the world
        run: make install

      - name: Start the world
        run: |
          export SERVER_LIMITED_ROUTING_ENABLED=false
          docker-compose up -d
      - name: Run the tests against LPA questionaire
        run: npm run test:e2e:lpa

      - name: Post-process results
        if: ${{ always() }}
        run: npm run test:e2e:lpa:postprocess

      - name: Archive results
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: results-lpa
          path: ${{ env.LPA_CYPRESS_REPORTS }}

      - name: Archive videos
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: videos-lpa
          path: ${{ env.LPA_CYPRESS_VIDEOS }}

      - name: Archive screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots-lpa
          path: ${{ env.LPA_CYPRESS_SCREENSHOTS }}

  cypress-default:
    needs: ['context']
    name: "Cypress- default"
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 5 copies of the job in parallel
        machines: [ 1 ]

    steps:
      - uses: actions/checkout@v2

      - name: Cache central NPM modules
        uses: actions/cache@v2
        env:
          cache-name: cache-cypress-central-npm-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: cypress-${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        env:
          cache-name: cache-cypress-binary
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      - name: Cache local node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-cypress-local-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: cypress-${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: Install the world
        run: make install

      - name: Start the world without ACP integration i.e. PINS
        run: |
          export SERVER_LIMITED_ROUTING_ENABLED=false
          docker-compose up -d

      - name: Run the tests without ACP integration in parallel
        uses: cypress-io/github-action@v2
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Pass the Github token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          working-directory: ./e2e-tests
          record: true
          parallel: true
          ci-build-id: ${{ needs.context.outputs.uuid }}

      - name: Post-process results without ACP integration
        if: ${{ always() }}
        run: npm run test:e2e:postprocess

      - name: Archive results without ACP integration
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: results-pins
          path: ${{ env.CYPRESS_REPORTS }}

      - name: Archive videos - without ACP integration
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: videos-pins
          path: ${{ env.CYPRESS_VIDEOS }}

      - name: Archive screenshots - without ACP integration
        if: ${{ always() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots-pins
          path: ${{ env.CYPRESS_SCREENSHOTS }}


