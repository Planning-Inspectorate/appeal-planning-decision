name: Common Infrastructure

on:
  push:
    branches:
      - main
      - master
    paths:
      - infrastructure/common/**/*
      - infrastructure/modules/**/*

defaults:
  run:
    working-directory: infrastructure/common

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  TF_CLI_ARGS: -no-color
  TF_INPUT: false
  TF_IN_AUTOMATION: 1
  TF_VAR_github_token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  WORKSPACE: default

jobs:
  build:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}"
            }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.4
          terraform_wrapper: false

      - name: Terraform Init
        run: |
          terraform init
          terraform workspace new "${{ env.WORKSPACE }}" || true
          terraform workspace select "${{ env.WORKSPACE }}"

      - run: terraform plan -out tfplan

      - name: Unlock resources
        run: bash ../scripts/lockResourceGroups.sh
          unlock
          "$(terraform workspace show)"
          "$(terraform output app-name)"

      - run: terraform apply tfplan

      - name: Lock resources
        if: ${{ always() }}
        run: bash ../scripts/lockResourceGroups.sh
          lock
          "$(terraform workspace show)"
          "$(terraform output app-name)"
